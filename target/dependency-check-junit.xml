<?xml version="1.0" encoding="UTF-8"?><testsuites failures="127" name="dependency-check" tests="31"><testsuite failures="0" id="0" name="/Users/user/.m2/repository/org/hdrhistogram/HdrHistogram/2.1.12/HdrHistogram-2.1.12.jar" package="HdrHistogram-2.1.12.jar" skipped="0" tests="1" timestamp="2024-08-01T01:25:04.946"><testcase classname="dependency-check" name="HdrHistogram-2.1.12.jar"/></testsuite><testsuite failures="1" id="1" name="/Users/user/.m2/repository/org/latencyutils/LatencyUtils/2.0.3/LatencyUtils-2.0.3.jar" package="LatencyUtils-2.0.3.jar" skipped="0" tests="1" timestamp="2024-08-01T01:25:04.946"><testcase classname="CVE-2021-4277" name="pkg:maven/org.latencyutils/LatencyUtils@2.0.3"><failure message="cvssV3: MEDIUM, score: 5.3 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N)"/><system-out>A vulnerability, which was classified as problematic, has been found in fredsmith utils. This issue affects some unknown processing of the file screenshot_sync of the component Filename Handler. The manipulation leads to predictable from observable state. The name of the patch is dbab1b66955eeb3d76b34612b358307f5c4e3944. It is recommended to apply a patch to fix this issue. The identifier VDB-216749 was assigned to this vulnerability.</system-out><system-err>location: /Users/user/.m2/repository/org/latencyutils/LatencyUtils/2.0.3/LatencyUtils-2.0.3.jar</system-err></testcase></testsuite><testsuite failures="0" id="2" name="/Users/user/.m2/repository/org/antlr/antlr4-runtime/4.7.2/antlr4-runtime-4.7.2.jar" package="antlr4-runtime-4.7.2.jar" skipped="0" tests="1" timestamp="2024-08-01T01:25:04.946"><testcase classname="dependency-check" name="antlr4-runtime-4.7.2.jar"/></testsuite><testsuite failures="0" id="3" name="/Users/user/.m2/repository/org/ow2/asm/asm/9.0-beta/asm-9.0-beta.jar" package="asm-9.0-beta.jar" skipped="0" tests="1" timestamp="2024-08-01T01:25:04.946"><testcase classname="dependency-check" name="asm-9.0-beta.jar"/></testsuite><testsuite failures="0" id="4" name="/Users/user/.m2/repository/io/github/classgraph/classgraph/4.8.149/classgraph-4.8.149.jar" package="classgraph-4.8.149.jar" skipped="0" tests="1" timestamp="2024-08-01T01:25:04.946"><testcase classname="dependency-check" name="classgraph-4.8.149.jar"/></testsuite><testsuite failures="2" id="5" name="/Users/user/.m2/repository/commons-io/commons-io/2.6/commons-io-2.6.jar" package="commons-io-2.6.jar" skipped="0" tests="2" timestamp="2024-08-01T01:25:04.946"><testcase classname="CVE-2021-29425" name="pkg:maven/commons-io/commons-io@2.6"><failure message="cvssV3: MEDIUM, score: 4.8 (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N)"/><system-out>In Apache Commons IO before 2.7, When invoking the method FileNameUtils.normalize with an improper input string, like &quot;//../foo&quot;, or &quot;\\..\foo&quot;, the result would be the same value, thus possibly providing access to files in the parent directory, but not further above (thus &quot;limited&quot; path traversal), if the calling code would use the result to construct a path value.</system-out><system-err>location: /Users/user/.m2/repository/commons-io/commons-io/2.6/commons-io-2.6.jar</system-err></testcase><testcase classname="CVE-2021-37533" name="pkg:maven/commons-io/commons-io@2.6"><failure message="cvssV3: MEDIUM, score: 6.5 (CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:N/A:N)"/><system-out>Prior to Apache Commons Net 3.9.0, Net&apos;s FTP client trusts the host from PASV response by default. A malicious server can redirect the Commons Net code to use a different host, but the user has to connect to the malicious server in the first place. This may lead to leakage of information about services running on the private network of the client. The default in version 3.9.0 is now false to ignore such hosts, as cURL does. See https://issues.apache.org/jira/browse/NET-711.</system-out><system-err>location: /Users/user/.m2/repository/commons-io/commons-io/2.6/commons-io-2.6.jar</system-err></testcase></testsuite><testsuite failures="0" id="6" name="/Users/user/.m2/repository/org/apache/commons/commons-lang3/3.10/commons-lang3-3.10.jar" package="commons-lang3-3.10.jar" skipped="0" tests="1" timestamp="2024-08-01T01:25:04.946"><testcase classname="dependency-check" name="commons-lang3-3.10.jar"/></testsuite><testsuite failures="1" id="7" name="/Users/user/.m2/repository/com/google/code/gson/gson/2.8.6/gson-2.8.6.jar" package="gson-2.8.6.jar" skipped="0" tests="1" timestamp="2024-08-01T01:25:04.946"><testcase classname="CVE-2022-25647" name="pkg:maven/com.google.code.gson/gson@2.8.6"><failure message="cvssV3: HIGH, score: 7.5 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H)"/><system-out>The package com.google.code.gson:gson before 2.8.9 are vulnerable to Deserialization of Untrusted Data via the writeReplace() method in internal classes, which may lead to DoS attacks.</system-out><system-err>location: /Users/user/.m2/repository/com/google/code/gson/gson/2.8.6/gson-2.8.6.jar</system-err></testcase></testsuite><testsuite failures="0" id="8" name="/Users/user/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.11.2/jackson-annotations-2.11.2.jar" package="jackson-annotations-2.11.2.jar" skipped="0" tests="1" timestamp="2024-08-01T01:25:04.946"><testcase classname="dependency-check" name="jackson-annotations-2.11.2.jar"/></testsuite><testsuite failures="2" id="9" name="/Users/user/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.11.2/jackson-core-2.11.2.jar" package="jackson-core-2.11.2.jar" skipped="0" tests="2" timestamp="2024-08-01T01:25:04.946"><testcase classname="CVE-2022-45688" name="pkg:maven/com.fasterxml.jackson.core/jackson-core@2.11.2"><failure message="cvssV3: HIGH, score: 7.5 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H)"/><system-out>A stack overflow in the XML.toJSONObject component of hutool-json v5.8.10 allows attackers to cause a Denial of Service (DoS) via crafted JSON or XML data.</system-out><system-err>location: /Users/user/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.11.2/jackson-core-2.11.2.jar</system-err></testcase><testcase classname="CVE-2023-5072" name="pkg:maven/com.fasterxml.jackson.core/jackson-core@2.11.2"><failure message="cvssV3: HIGH, score: 7.5 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H)"/><system-out>Denial of Service  in JSON-Java versions up to and including 20230618. Â A bug in the parser means that an input string of modest size can lead to indefinite amounts of memory being used.</system-out><system-err>location: /Users/user/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.11.2/jackson-core-2.11.2.jar</system-err></testcase></testsuite><testsuite failures="5" id="10" name="/Users/user/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.11.2/jackson-databind-2.11.2.jar" package="jackson-databind-2.11.2.jar" skipped="0" tests="5" timestamp="2024-08-01T01:25:04.946"><testcase classname="CVE-2020-36518" name="pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.11.2"><failure message="cvssV3: HIGH, score: 7.5 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H)"/><system-out>jackson-databind before 2.13.0 allows a Java StackOverflow exception and denial of service via a large depth of nested objects.</system-out><system-err>location: /Users/user/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.11.2/jackson-databind-2.11.2.jar</system-err></testcase><testcase classname="CVE-2021-46877" name="pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.11.2"><failure message="cvssV3: HIGH, score: 7.5 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H)"/><system-out>jackson-databind 2.10.x through 2.12.x before 2.12.6 and 2.13.x before 2.13.1 allows attackers to cause a denial of service (2 GB transient heap usage per read) in uncommon situations involving JsonNode JDK serialization.</system-out><system-err>location: /Users/user/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.11.2/jackson-databind-2.11.2.jar</system-err></testcase><testcase classname="CVE-2022-42003" name="pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.11.2"><failure message="cvssV3: HIGH, score: 7.5 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H)"/><system-out>In FasterXML jackson-databind before versions 2.13.4.1 and 2.12.17.1, resource exhaustion can occur because of a lack of a check in primitive value deserializers to avoid deep wrapper array nesting, when the UNWRAP_SINGLE_VALUE_ARRAYS feature is enabled.</system-out><system-err>location: /Users/user/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.11.2/jackson-databind-2.11.2.jar</system-err></testcase><testcase classname="CVE-2022-42004" name="pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.11.2"><failure message="cvssV3: HIGH, score: 7.5 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H)"/><system-out>In FasterXML jackson-databind before 2.13.4, resource exhaustion can occur because of a lack of a check in BeanDeserializer._deserializeFromArray to prevent use of deeply nested arrays. An application is vulnerable only with certain customized choices for deserialization.</system-out><system-err>location: /Users/user/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.11.2/jackson-databind-2.11.2.jar</system-err></testcase><testcase classname="CVE-2023-35116" name="pkg:maven/com.fasterxml.jackson.core/jackson-databind@2.11.2"><failure message="cvssV3: MEDIUM, score: 4.7 (CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:N/I:N/A:H)"/><system-out>jackson-databind through 2.15.2 allows attackers to cause a denial of service or other unspecified impact via a crafted object that uses cyclic dependencies. NOTE: the vendor&apos;s perspective is that this is not a valid vulnerability report, because the steps of constructing a cyclic data structure and trying to serialize it cannot be achieved by an external attacker.</system-out><system-err>location: /Users/user/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.11.2/jackson-databind-2.11.2.jar</system-err></testcase></testsuite><testsuite failures="0" id="11" name="/Users/user/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.11.2/jackson-dataformat-yaml-2.11.2.jar" package="jackson-dataformat-yaml-2.11.2.jar" skipped="0" tests="1" timestamp="2024-08-01T01:25:04.946"><testcase classname="dependency-check" name="jackson-dataformat-yaml-2.11.2.jar"/></testsuite><testsuite failures="0" id="12" name="/Users/user/.m2/repository/jakarta/activation/jakarta.activation-api/1.2.2/jakarta.activation-api-1.2.2.jar" package="jakarta.activation-api-1.2.2.jar" skipped="0" tests="1" timestamp="2024-08-01T01:25:04.946"><testcase classname="dependency-check" name="jakarta.activation-api-1.2.2.jar"/></testsuite><testsuite failures="0" id="13" name="/Users/user/.m2/repository/jakarta/annotation/jakarta.annotation-api/1.3.5/jakarta.annotation-api-1.3.5.jar" package="jakarta.annotation-api-1.3.5.jar" skipped="0" tests="1" timestamp="2024-08-01T01:25:04.946"><testcase classname="dependency-check" name="jakarta.annotation-api-1.3.5.jar"/></testsuite><testsuite failures="1" id="14" name="/Users/user/.m2/repository/org/glassfish/jakarta.el/3.0.3/jakarta.el-3.0.3.jar" package="jakarta.el-3.0.3.jar" skipped="0" tests="1" timestamp="2024-08-01T01:25:04.946"><testcase classname="CVE-2021-28170" name="pkg:maven/org.glassfish/jakarta.el@3.0.3"><failure message="cvssV3: MEDIUM, score: 5.3 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N)"/><system-out>In the Jakarta Expression Language implementation 3.0.3 and earlier, a bug in the ELParserTokenManager enables invalid EL expressions to be evaluated as if they were valid.</system-out><system-err>location: /Users/user/.m2/repository/org/glassfish/jakarta.el/3.0.3/jakarta.el-3.0.3.jar</system-err></testcase></testsuite><testsuite failures="0" id="15" name="/Users/user/.m2/repository/jakarta/validation/jakarta.validation-api/2.0.2/jakarta.validation-api-2.0.2.jar" package="jakarta.validation-api-2.0.2.jar" skipped="0" tests="1" timestamp="2024-08-01T01:25:04.946"><testcase classname="dependency-check" name="jakarta.validation-api-2.0.2.jar"/></testsuite><testsuite failures="0" id="16" name="/Users/user/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/2.3.3/jakarta.xml.bind-api-2.3.3.jar" package="jakarta.xml.bind-api-2.3.3.jar" skipped="0" tests="1" timestamp="2024-08-01T01:25:04.946"><testcase classname="dependency-check" name="jakarta.xml.bind-api-2.3.3.jar"/></testsuite><testsuite failures="0" id="17" name="/Users/user/.m2/repository/javax/servlet/javax.servlet-api/4.0.1/javax.servlet-api-4.0.1.jar" package="javax.servlet-api-4.0.1.jar" skipped="0" tests="1" timestamp="2024-08-01T01:25:04.946"><testcase classname="dependency-check" name="javax.servlet-api-4.0.1.jar"/></testsuite><testsuite failures="0" id="18" name="/Users/user/.m2/repository/com/beust/jcommander/1.48/jcommander-1.48.jar" package="jcommander-1.48.jar" skipped="0" tests="1" timestamp="2024-08-01T01:25:04.946"><testcase classname="dependency-check" name="jcommander-1.48.jar"/></testsuite><testsuite failures="0" id="19" name="/Users/user/.m2/repository/org/slf4j/jul-to-slf4j/1.7.30/jul-to-slf4j-1.7.30.jar" package="jul-to-slf4j-1.7.30.jar" skipped="0" tests="1" timestamp="2024-08-01T01:25:04.946"><testcase classname="dependency-check" name="jul-to-slf4j-1.7.30.jar"/></testsuite><testsuite failures="4" id="20" name="/Users/user/.m2/repository/org/apache/logging/log4j/log4j-api/2.13.3/log4j-api-2.13.3.jar" package="log4j-api-2.13.3.jar" skipped="0" tests="4" timestamp="2024-08-01T01:25:04.946"><testcase classname="CVE-2021-44228" name="pkg:maven/org.apache.logging.log4j/log4j-api@2.13.3"><failure message="cvssV3: CRITICAL, score: 10.0 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:H)"/><system-out>Apache Log4j2 2.0-beta9 through 2.15.0 (excluding security releases 2.12.2, 2.12.3, and 2.3.1) JNDI features used in configuration, log messages, and parameters do not protect against attacker controlled LDAP and other JNDI related endpoints. An attacker who can control log messages or log message parameters can execute arbitrary code loaded from LDAP servers when message lookup substitution is enabled. From log4j 2.15.0, this behavior has been disabled by default. From version 2.16.0 (along with 2.12.2, 2.12.3, and 2.3.1), this functionality has been completely removed. Note that this vulnerability is specific to log4j-core and does not affect log4net, log4cxx, or other Apache Logging Services projects.</system-out><system-err>location: /Users/user/.m2/repository/org/apache/logging/log4j/log4j-api/2.13.3/log4j-api-2.13.3.jar</system-err></testcase><testcase classname="CVE-2021-44832" name="pkg:maven/org.apache.logging.log4j/log4j-api@2.13.3"><failure message="cvssV3: MEDIUM, score: 6.6 (CVSS:3.1/AV:N/AC:H/PR:H/UI:N/S:U/C:H/I:H/A:H)"/><system-out>Apache Log4j2 versions 2.0-beta7 through 2.17.0 (excluding security fix releases 2.3.2 and 2.12.4) are vulnerable to a remote code execution (RCE) attack when a configuration uses a JDBC Appender with a JNDI LDAP data source URI when an attacker has control of the target LDAP server. This issue is fixed by limiting JNDI data source names to the java protocol in Log4j2 versions 2.17.1, 2.12.4, and 2.3.2.</system-out><system-err>location: /Users/user/.m2/repository/org/apache/logging/log4j/log4j-api/2.13.3/log4j-api-2.13.3.jar</system-err></testcase><testcase classname="CVE-2021-45046" name="pkg:maven/org.apache.logging.log4j/log4j-api@2.13.3"><failure message="cvssV3: CRITICAL, score: 9.0 (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:C/C:H/I:H/A:H)"/><system-out>It was found that the fix to address CVE-2021-44228 in Apache Log4j 2.15.0 was incomplete in certain non-default configurations. This could allows attackers with control over Thread Context Map (MDC) input data when the logging configuration uses a non-default Pattern Layout with either a Context Lookup (for example, $${ctx:loginId}) or a Thread Context Map pattern (%X, %mdc, or %MDC) to craft malicious input data using a JNDI Lookup pattern resulting in an information leak and remote code execution in some environments and local code execution in all environments. Log4j 2.16.0 (Java 8) and 2.12.2 (Java 7) fix this issue by removing support for message lookup patterns and disabling JNDI functionality by default.</system-out><system-err>location: /Users/user/.m2/repository/org/apache/logging/log4j/log4j-api/2.13.3/log4j-api-2.13.3.jar</system-err></testcase><testcase classname="CVE-2021-45105" name="pkg:maven/org.apache.logging.log4j/log4j-api@2.13.3"><failure message="cvssV3: MEDIUM, score: 5.9 (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H)"/><system-out>Apache Log4j2 versions 2.0-alpha1 through 2.16.0 (excluding 2.12.3 and 2.3.1) did not protect from uncontrolled recursion from self-referential lookups. This allows an attacker with control over Thread Context Map data to cause a denial of service when a crafted string is interpreted. This issue was fixed in Log4j 2.17.0, 2.12.3, and 2.3.1.</system-out><system-err>location: /Users/user/.m2/repository/org/apache/logging/log4j/log4j-api/2.13.3/log4j-api-2.13.3.jar</system-err></testcase></testsuite><testsuite failures="2" id="21" name="/Users/user/.m2/repository/ch/qos/logback/logback-core/1.2.3/logback-core-1.2.3.jar" package="logback-core-1.2.3.jar" skipped="0" tests="2" timestamp="2024-08-01T01:25:04.946"><testcase classname="CVE-2021-42550" name="pkg:maven/ch.qos.logback/logback-core@1.2.3"><failure message="cvssV3: MEDIUM, score: 6.6 (CVSS:3.1/AV:N/AC:H/PR:H/UI:N/S:U/C:H/I:H/A:H)"/><system-out>In logback version 1.2.7 and prior versions, an attacker with the required privileges to edit configurations files could craft a malicious configuration allowing to execute arbitrary code loaded from LDAP servers.</system-out><system-err>location: /Users/user/.m2/repository/ch/qos/logback/logback-core/1.2.3/logback-core-1.2.3.jar</system-err></testcase><testcase classname="CVE-2023-6378" name="pkg:maven/ch.qos.logback/logback-core@1.2.3"><failure message="cvssV3: HIGH, score: 7.5 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H)"/><system-out>A serialization vulnerability in logback receiver component part of 
logback version 1.4.11 allows an attacker to mount a Denial-Of-Service 
attack by sending poisoned data.

</system-out><system-err>location: /Users/user/.m2/repository/ch/qos/logback/logback-core/1.2.3/logback-core-1.2.3.jar</system-err></testcase></testsuite><testsuite failures="0" id="22" name="/Users/user/.m2/repository/io/micrometer/micrometer-core/1.5.5/micrometer-core-1.5.5.jar" package="micrometer-core-1.5.5.jar" skipped="0" tests="1" timestamp="2024-08-01T01:25:04.946"><testcase classname="dependency-check" name="micrometer-core-1.5.5.jar"/></testsuite><testsuite failures="0" id="23" name="/Users/user/.m2/repository/net/sourceforge/pmd/pmd-core/6.31.0/pmd-core-6.31.0.jar" package="pmd-core-6.31.0.jar" skipped="0" tests="1" timestamp="2024-08-01T01:25:04.946"><testcase classname="dependency-check" name="pmd-core-6.31.0.jar"/></testsuite><testsuite failures="0" id="24" name="/Users/user/.m2/repository/net/sourceforge/saxon/saxon/9.1.0.8/saxon-9.1.0.8-dom.jar" package="saxon-9.1.0.8-dom.jar" skipped="0" tests="1" timestamp="2024-08-01T01:25:04.946"><testcase classname="dependency-check" name="saxon-9.1.0.8-dom.jar"/></testsuite><testsuite failures="0" id="25" name="/Users/user/.m2/repository/net/sourceforge/saxon/saxon/9.1.0.8/saxon-9.1.0.8.jar" package="saxon-9.1.0.8.jar" skipped="0" tests="1" timestamp="2024-08-01T01:25:04.946"><testcase classname="dependency-check" name="saxon-9.1.0.8.jar"/></testsuite><testsuite failures="0" id="26" name="/Users/user/.m2/repository/org/slf4j/slf4j-api/1.7.30/slf4j-api-1.7.30.jar" package="slf4j-api-1.7.30.jar" skipped="0" tests="1" timestamp="2024-08-01T01:25:04.946"><testcase classname="dependency-check" name="slf4j-api-1.7.30.jar"/></testsuite><testsuite failures="7" id="27" name="/Users/user/.m2/repository/org/yaml/snakeyaml/1.26/snakeyaml-1.26.jar" package="snakeyaml-1.26.jar" skipped="0" tests="7" timestamp="2024-08-01T01:25:04.946"><testcase classname="CVE-2022-1471" name="pkg:maven/org.yaml/snakeyaml@1.26"><failure message="cvssV3: CRITICAL, score: 9.8 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H)"/><system-out>SnakeYaml&apos;s Constructor() class does not restrict types which can be instantiated during deserialization.Â Deserializing yaml content provided by an attacker can lead to remote code execution. We recommend using SnakeYaml&apos;s SafeConsturctor when parsing untrusted content to restrict deserialization. We recommend upgrading to version 2.0 and beyond.
</system-out><system-err>location: /Users/user/.m2/repository/org/yaml/snakeyaml/1.26/snakeyaml-1.26.jar</system-err></testcase><testcase classname="CVE-2022-25857" name="pkg:maven/org.yaml/snakeyaml@1.26"><failure message="cvssV3: HIGH, score: 7.5 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H)"/><system-out>The package org.yaml:snakeyaml from 0 and before 1.31 are vulnerable to Denial of Service (DoS) due missing to nested depth limitation for collections.</system-out><system-err>location: /Users/user/.m2/repository/org/yaml/snakeyaml/1.26/snakeyaml-1.26.jar</system-err></testcase><testcase classname="CVE-2022-38749" name="pkg:maven/org.yaml/snakeyaml@1.26"><failure message="cvssV3: MEDIUM, score: 6.5 (CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H)"/><system-out>Using snakeYAML to parse untrusted YAML files may be vulnerable to Denial of Service attacks (DOS). If the parser is running on user supplied input, an attacker may supply content that causes the parser to crash by stackoverflow.</system-out><system-err>location: /Users/user/.m2/repository/org/yaml/snakeyaml/1.26/snakeyaml-1.26.jar</system-err></testcase><testcase classname="CVE-2022-38750" name="pkg:maven/org.yaml/snakeyaml@1.26"><failure message="cvssV3: MEDIUM, score: 5.5 (CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H)"/><system-out>Using snakeYAML to parse untrusted YAML files may be vulnerable to Denial of Service attacks (DOS). If the parser is running on user supplied input, an attacker may supply content that causes the parser to crash by stackoverflow.</system-out><system-err>location: /Users/user/.m2/repository/org/yaml/snakeyaml/1.26/snakeyaml-1.26.jar</system-err></testcase><testcase classname="CVE-2022-38751" name="pkg:maven/org.yaml/snakeyaml@1.26"><failure message="cvssV3: MEDIUM, score: 6.5 (CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H)"/><system-out>Using snakeYAML to parse untrusted YAML files may be vulnerable to Denial of Service attacks (DOS). If the parser is running on user supplied input, an attacker may supply content that causes the parser to crash by stackoverflow.</system-out><system-err>location: /Users/user/.m2/repository/org/yaml/snakeyaml/1.26/snakeyaml-1.26.jar</system-err></testcase><testcase classname="CVE-2022-38752" name="pkg:maven/org.yaml/snakeyaml@1.26"><failure message="cvssV3: MEDIUM, score: 6.5 (CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H)"/><system-out>Using snakeYAML to parse untrusted YAML files may be vulnerable to Denial of Service attacks (DOS). If the parser is running on user supplied input, an attacker may supply content that causes the parser to crash by stack-overflow.</system-out><system-err>location: /Users/user/.m2/repository/org/yaml/snakeyaml/1.26/snakeyaml-1.26.jar</system-err></testcase><testcase classname="CVE-2022-41854" name="pkg:maven/org.yaml/snakeyaml@1.26"><failure message="cvssV3: MEDIUM, score: 6.5 (CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H)"/><system-out>Those using Snakeyaml to parse untrusted YAML files may be vulnerable to Denial of Service attacks (DOS). If the parser is running on user supplied input, an attacker may supply content that causes the parser to crash by stack overflow. This effect may support a denial of service attack.</system-out><system-err>location: /Users/user/.m2/repository/org/yaml/snakeyaml/1.26/snakeyaml-1.26.jar</system-err></testcase></testsuite><testsuite failures="16" id="28" name="/Users/user/.m2/repository/org/springframework/boot/spring-boot/2.3.4.RELEASE/spring-boot-2.3.4.RELEASE.jar" package="spring-boot-2.3.4.RELEASE.jar" skipped="0" tests="16" timestamp="2024-08-01T01:25:04.946"><testcase classname="CVE-2013-4152" name="pkg:maven/org.springframework.boot/spring-boot@2.3.4.RELEASE"><failure message="cvssV2: MEDIUM, score: 6.8 (/AV:N/AC:M/Au:N/C:P/I:P/A:P)"/><system-out>The Spring OXM wrapper in Spring Framework before 3.2.4 and 4.0.0.M1, when using the JAXB marshaller, does not disable entity resolution, which allows context-dependent attackers to read arbitrary files, cause a denial of service, and conduct CSRF attacks via an XML external entity declaration in conjunction with an entity reference in a (1) DOMSource, (2) StAXSource, (3) SAXSource, or (4) StreamSource, aka an XML External Entity (XXE) issue.</system-out><system-err>location: /Users/user/.m2/repository/org/springframework/boot/spring-boot/2.3.4.RELEASE/spring-boot-2.3.4.RELEASE.jar</system-err></testcase><testcase classname="CVE-2013-7315" name="pkg:maven/org.springframework.boot/spring-boot@2.3.4.RELEASE"><failure message="cvssV2: MEDIUM, score: 6.8 (/AV:N/AC:M/Au:N/C:P/I:P/A:P)"/><system-out>The Spring MVC in Spring Framework before 3.2.4 and 4.0.0.M1 through 4.0.0.M2 does not disable external entity resolution for the StAX XMLInputFactory, which allows context-dependent attackers to read arbitrary files, cause a denial of service, and conduct CSRF attacks via crafted XML with JAXB, aka an XML External Entity (XXE) issue, and a different vulnerability than CVE-2013-4152.  NOTE: this issue was SPLIT from CVE-2013-4152 due to different affected versions.</system-out><system-err>location: /Users/user/.m2/repository/org/springframework/boot/spring-boot/2.3.4.RELEASE/spring-boot-2.3.4.RELEASE.jar</system-err></testcase><testcase classname="CVE-2014-0054" name="pkg:maven/org.springframework.boot/spring-boot@2.3.4.RELEASE"><failure message="cvssV2: MEDIUM, score: 6.8 (/AV:N/AC:M/Au:N/C:P/I:P/A:P)"/><system-out>The Jaxb2RootElementHttpMessageConverter in Spring MVC in Spring Framework before 3.2.8 and 4.0.0 before 4.0.2 does not disable external entity resolution, which allows remote attackers to read arbitrary files, cause a denial of service, and conduct CSRF attacks via crafted XML, aka an XML External Entity (XXE) issue.  NOTE: this vulnerability exists because of an incomplete fix for CVE-2013-4152, CVE-2013-7315, and CVE-2013-6429.</system-out><system-err>location: /Users/user/.m2/repository/org/springframework/boot/spring-boot/2.3.4.RELEASE/spring-boot-2.3.4.RELEASE.jar</system-err></testcase><testcase classname="CVE-2016-1000027" name="pkg:maven/org.springframework.boot/spring-boot@2.3.4.RELEASE"><failure message="cvssV3: CRITICAL, score: 9.8 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H)"/><system-out>Pivotal Spring Framework through 5.3.16 suffers from a potential remote code execution (RCE) issue if used for Java deserialization of untrusted data. Depending on how the library is implemented within a product, this issue may or not occur, and authentication may be required. NOTE: the vendor&apos;s position is that untrusted data is not an intended use case. The product&apos;s behavior will not be changed because some users rely on deserialization of trusted data.</system-out><system-err>location: /Users/user/.m2/repository/org/springframework/boot/spring-boot/2.3.4.RELEASE/spring-boot-2.3.4.RELEASE.jar</system-err></testcase><testcase classname="CVE-2018-11039" name="pkg:maven/org.springframework.boot/spring-boot@2.3.4.RELEASE"><failure message="cvssV3: MEDIUM, score: 5.9 (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N)"/><system-out>Spring Framework (versions 5.0.x prior to 5.0.7, versions 4.3.x prior to 4.3.18, and older unsupported versions) allow web applications to change the HTTP request method to any HTTP method (including TRACE) using the HiddenHttpMethodFilter in Spring MVC. If an application has a pre-existing XSS vulnerability, a malicious user (or attacker) can use this filter to escalate to an XST (Cross Site Tracing) attack.</system-out><system-err>location: /Users/user/.m2/repository/org/springframework/boot/spring-boot/2.3.4.RELEASE/spring-boot-2.3.4.RELEASE.jar</system-err></testcase><testcase classname="CVE-2018-11040" name="pkg:maven/org.springframework.boot/spring-boot@2.3.4.RELEASE"><failure message="cvssV3: HIGH, score: 7.5 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N)"/><system-out>Spring Framework, versions 5.0.x prior to 5.0.7 and 4.3.x prior to 4.3.18 and older unsupported versions, allows web applications to enable cross-domain requests via JSONP (JSON with Padding) through AbstractJsonpResponseBodyAdvice for REST controllers and MappingJackson2JsonView for browser requests. Both are not enabled by default in Spring Framework nor Spring Boot, however, when MappingJackson2JsonView is configured in an application, JSONP support is automatically ready to use through the &quot;jsonp&quot; and &quot;callback&quot; JSONP parameters, enabling cross-domain requests.</system-out><system-err>location: /Users/user/.m2/repository/org/springframework/boot/spring-boot/2.3.4.RELEASE/spring-boot-2.3.4.RELEASE.jar</system-err></testcase><testcase classname="CVE-2018-1257" name="pkg:maven/org.springframework.boot/spring-boot@2.3.4.RELEASE"><failure message="cvssV3: MEDIUM, score: 6.5 (CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H)"/><system-out>Spring Framework, versions 5.0.x prior to 5.0.6, versions 4.3.x prior to 4.3.17, and older unsupported versions allows applications to expose STOMP over WebSocket endpoints with a simple, in-memory STOMP broker through the spring-messaging module. A malicious user (or attacker) can craft a message to the broker that can lead to a regular expression, denial of service attack.</system-out><system-err>location: /Users/user/.m2/repository/org/springframework/boot/spring-boot/2.3.4.RELEASE/spring-boot-2.3.4.RELEASE.jar</system-err></testcase><testcase classname="CVE-2020-5421" name="pkg:maven/org.springframework.boot/spring-boot@2.3.4.RELEASE"><failure message="cvssV3: MEDIUM, score: 6.5 (CVSS:3.1/AV:N/AC:H/PR:L/UI:R/S:C/C:L/I:H/A:N)"/><system-out>In Spring Framework versions 5.2.0 - 5.2.8, 5.1.0 - 5.1.17, 5.0.0 - 5.0.18, 4.3.0 - 4.3.28, and older unsupported versions, the protections against RFD attacks from CVE-2015-5211 may be bypassed depending on the browser used through the use of a jsessionid path parameter.</system-out><system-err>location: /Users/user/.m2/repository/org/springframework/boot/spring-boot/2.3.4.RELEASE/spring-boot-2.3.4.RELEASE.jar</system-err></testcase><testcase classname="CVE-2022-22950" name="pkg:maven/org.springframework.boot/spring-boot@2.3.4.RELEASE"><failure message="cvssV3: MEDIUM, score: 6.5 (CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H)"/><system-out>n Spring Framework versions 5.3.0 - 5.3.16 and older unsupported versions, it is possible for a user to provide a specially crafted SpEL expression that may cause a denial of service condition.</system-out><system-err>location: /Users/user/.m2/repository/org/springframework/boot/spring-boot/2.3.4.RELEASE/spring-boot-2.3.4.RELEASE.jar</system-err></testcase><testcase classname="CVE-2022-22965" name="pkg:maven/org.springframework.boot/spring-boot@2.3.4.RELEASE"><failure message="cvssV3: CRITICAL, score: 9.8 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H)"/><system-out>A Spring MVC or Spring WebFlux application running on JDK 9+ may be vulnerable to remote code execution (RCE) via data binding. The specific exploit requires the application to run on Tomcat as a WAR deployment. If the application is deployed as a Spring Boot executable jar, i.e. the default, it is not vulnerable to the exploit. However, the nature of the vulnerability is more general, and there may be other ways to exploit it.</system-out><system-err>location: /Users/user/.m2/repository/org/springframework/boot/spring-boot/2.3.4.RELEASE/spring-boot-2.3.4.RELEASE.jar</system-err></testcase><testcase classname="CVE-2022-22968" name="pkg:maven/org.springframework.boot/spring-boot@2.3.4.RELEASE"><failure message="cvssV3: MEDIUM, score: 5.3 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N)"/><system-out>In Spring Framework versions 5.3.0 - 5.3.18, 5.2.0 - 5.2.20, and older unsupported versions, the patterns for disallowedFields on a DataBinder are case sensitive which means a field is not effectively protected unless it is listed with both upper and lower case for the first character of the field, including upper and lower case for the first character of all nested fields within the property path.</system-out><system-err>location: /Users/user/.m2/repository/org/springframework/boot/spring-boot/2.3.4.RELEASE/spring-boot-2.3.4.RELEASE.jar</system-err></testcase><testcase classname="CVE-2022-22970" name="pkg:maven/org.springframework.boot/spring-boot@2.3.4.RELEASE"><failure message="cvssV3: MEDIUM, score: 5.3 (CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:N/I:N/A:H)"/><system-out>In spring framework versions prior to 5.3.20+ , 5.2.22+ and old unsupported versions, applications that handle file uploads are vulnerable to DoS attack if they rely on data binding to set a MultipartFile or javax.servlet.Part to a field in a model object.</system-out><system-err>location: /Users/user/.m2/repository/org/springframework/boot/spring-boot/2.3.4.RELEASE/spring-boot-2.3.4.RELEASE.jar</system-err></testcase><testcase classname="CVE-2022-27772" name="pkg:maven/org.springframework.boot/spring-boot@2.3.4.RELEASE"><failure message="cvssV2: HIGH, score: 7.8 (/AV:L/AC:L/Au:/C:H/I:H/A:H)"/><system-out>spring-boot versions prior to version v2.2.11.RELEASE was vulnerable to temporary directory hijacking. This vulnerability impacted the org.springframework.boot.web.server.AbstractConfigurableWebServerFactory.createTempDir method. NOTE: This vulnerability only affects products and/or versions that are no longer supported by the maintainer

Sonatype&apos;s research suggests that this CVE&apos;s details differ from those defined at NVD. See https://ossindex.sonatype.org/vulnerability/CVE-2022-27772 for details</system-out><system-err>location: /Users/user/.m2/repository/org/springframework/boot/spring-boot/2.3.4.RELEASE/spring-boot-2.3.4.RELEASE.jar</system-err></testcase><testcase classname="CVE-2023-20861" name="pkg:maven/org.springframework.boot/spring-boot@2.3.4.RELEASE"><failure message="cvssV3: MEDIUM, score: 6.5 (CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H)"/><system-out>In Spring Framework versions 6.0.0 - 6.0.6, 5.3.0 - 5.3.25, 5.2.0.RELEASE - 5.2.22.RELEASE, and older unsupported versions, it is possible for a user to provide a specially crafted SpEL expression that may cause a denial-of-service (DoS) condition.</system-out><system-err>location: /Users/user/.m2/repository/org/springframework/boot/spring-boot/2.3.4.RELEASE/spring-boot-2.3.4.RELEASE.jar</system-err></testcase><testcase classname="CVE-2023-20873" name="pkg:maven/org.springframework.boot/spring-boot@2.3.4.RELEASE"><failure message="cvssV3: CRITICAL, score: 9.8 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H)"/><system-out>In Spring Boot versions 3.0.0 - 3.0.5, 2.7.0 - 2.7.10, and older unsupported versions, an application that is deployed to Cloud Foundry could be susceptible to a security bypass. Users of affected versions should apply the following mitigation: 3.0.x users should upgrade to 3.0.6+. 2.7.x users should upgrade to 2.7.11+. Users of older, unsupported versions should upgrade to 3.0.6+ or 2.7.11+.</system-out><system-err>location: /Users/user/.m2/repository/org/springframework/boot/spring-boot/2.3.4.RELEASE/spring-boot-2.3.4.RELEASE.jar</system-err></testcase><testcase classname="CVE-2023-20883" name="pkg:maven/org.springframework.boot/spring-boot@2.3.4.RELEASE"><failure message="cvssV3: HIGH, score: 7.5 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H)"/><system-out>In Spring Boot versions 3.0.0 - 3.0.6, 2.7.0 - 2.7.11, 2.6.0 - 2.6.14, 2.5.0 - 2.5.14 and older unsupported versions, there is potential for a denial-of-service (DoS) attack if Spring MVC is used together with a reverse proxy cache.</system-out><system-err>location: /Users/user/.m2/repository/org/springframework/boot/spring-boot/2.3.4.RELEASE/spring-boot-2.3.4.RELEASE.jar</system-err></testcase></testsuite><testsuite failures="16" id="29" name="/Users/user/.m2/repository/org/springframework/boot/spring-boot-actuator/2.3.4.RELEASE/spring-boot-actuator-2.3.4.RELEASE.jar" package="spring-boot-actuator-2.3.4.RELEASE.jar" skipped="0" tests="16" timestamp="2024-08-01T01:25:04.946"><testcase classname="CVE-2013-4152" name="pkg:maven/org.springframework.boot/spring-boot-actuator@2.3.4.RELEASE"><failure message="cvssV2: MEDIUM, score: 6.8 (/AV:N/AC:M/Au:N/C:P/I:P/A:P)"/><system-out>The Spring OXM wrapper in Spring Framework before 3.2.4 and 4.0.0.M1, when using the JAXB marshaller, does not disable entity resolution, which allows context-dependent attackers to read arbitrary files, cause a denial of service, and conduct CSRF attacks via an XML external entity declaration in conjunction with an entity reference in a (1) DOMSource, (2) StAXSource, (3) SAXSource, or (4) StreamSource, aka an XML External Entity (XXE) issue.</system-out><system-err>location: /Users/user/.m2/repository/org/springframework/boot/spring-boot-actuator/2.3.4.RELEASE/spring-boot-actuator-2.3.4.RELEASE.jar</system-err></testcase><testcase classname="CVE-2013-7315" name="pkg:maven/org.springframework.boot/spring-boot-actuator@2.3.4.RELEASE"><failure message="cvssV2: MEDIUM, score: 6.8 (/AV:N/AC:M/Au:N/C:P/I:P/A:P)"/><system-out>The Spring MVC in Spring Framework before 3.2.4 and 4.0.0.M1 through 4.0.0.M2 does not disable external entity resolution for the StAX XMLInputFactory, which allows context-dependent attackers to read arbitrary files, cause a denial of service, and conduct CSRF attacks via crafted XML with JAXB, aka an XML External Entity (XXE) issue, and a different vulnerability than CVE-2013-4152.  NOTE: this issue was SPLIT from CVE-2013-4152 due to different affected versions.</system-out><system-err>location: /Users/user/.m2/repository/org/springframework/boot/spring-boot-actuator/2.3.4.RELEASE/spring-boot-actuator-2.3.4.RELEASE.jar</system-err></testcase><testcase classname="CVE-2014-0054" name="pkg:maven/org.springframework.boot/spring-boot-actuator@2.3.4.RELEASE"><failure message="cvssV2: MEDIUM, score: 6.8 (/AV:N/AC:M/Au:N/C:P/I:P/A:P)"/><system-out>The Jaxb2RootElementHttpMessageConverter in Spring MVC in Spring Framework before 3.2.8 and 4.0.0 before 4.0.2 does not disable external entity resolution, which allows remote attackers to read arbitrary files, cause a denial of service, and conduct CSRF attacks via crafted XML, aka an XML External Entity (XXE) issue.  NOTE: this vulnerability exists because of an incomplete fix for CVE-2013-4152, CVE-2013-7315, and CVE-2013-6429.</system-out><system-err>location: /Users/user/.m2/repository/org/springframework/boot/spring-boot-actuator/2.3.4.RELEASE/spring-boot-actuator-2.3.4.RELEASE.jar</system-err></testcase><testcase classname="CVE-2016-1000027" name="pkg:maven/org.springframework.boot/spring-boot-actuator@2.3.4.RELEASE"><failure message="cvssV3: CRITICAL, score: 9.8 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H)"/><system-out>Pivotal Spring Framework through 5.3.16 suffers from a potential remote code execution (RCE) issue if used for Java deserialization of untrusted data. Depending on how the library is implemented within a product, this issue may or not occur, and authentication may be required. NOTE: the vendor&apos;s position is that untrusted data is not an intended use case. The product&apos;s behavior will not be changed because some users rely on deserialization of trusted data.</system-out><system-err>location: /Users/user/.m2/repository/org/springframework/boot/spring-boot-actuator/2.3.4.RELEASE/spring-boot-actuator-2.3.4.RELEASE.jar</system-err></testcase><testcase classname="CVE-2018-11039" name="pkg:maven/org.springframework.boot/spring-boot-actuator@2.3.4.RELEASE"><failure message="cvssV3: MEDIUM, score: 5.9 (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N)"/><system-out>Spring Framework (versions 5.0.x prior to 5.0.7, versions 4.3.x prior to 4.3.18, and older unsupported versions) allow web applications to change the HTTP request method to any HTTP method (including TRACE) using the HiddenHttpMethodFilter in Spring MVC. If an application has a pre-existing XSS vulnerability, a malicious user (or attacker) can use this filter to escalate to an XST (Cross Site Tracing) attack.</system-out><system-err>location: /Users/user/.m2/repository/org/springframework/boot/spring-boot-actuator/2.3.4.RELEASE/spring-boot-actuator-2.3.4.RELEASE.jar</system-err></testcase><testcase classname="CVE-2018-11040" name="pkg:maven/org.springframework.boot/spring-boot-actuator@2.3.4.RELEASE"><failure message="cvssV3: HIGH, score: 7.5 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N)"/><system-out>Spring Framework, versions 5.0.x prior to 5.0.7 and 4.3.x prior to 4.3.18 and older unsupported versions, allows web applications to enable cross-domain requests via JSONP (JSON with Padding) through AbstractJsonpResponseBodyAdvice for REST controllers and MappingJackson2JsonView for browser requests. Both are not enabled by default in Spring Framework nor Spring Boot, however, when MappingJackson2JsonView is configured in an application, JSONP support is automatically ready to use through the &quot;jsonp&quot; and &quot;callback&quot; JSONP parameters, enabling cross-domain requests.</system-out><system-err>location: /Users/user/.m2/repository/org/springframework/boot/spring-boot-actuator/2.3.4.RELEASE/spring-boot-actuator-2.3.4.RELEASE.jar</system-err></testcase><testcase classname="CVE-2018-1257" name="pkg:maven/org.springframework.boot/spring-boot-actuator@2.3.4.RELEASE"><failure message="cvssV3: MEDIUM, score: 6.5 (CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H)"/><system-out>Spring Framework, versions 5.0.x prior to 5.0.6, versions 4.3.x prior to 4.3.17, and older unsupported versions allows applications to expose STOMP over WebSocket endpoints with a simple, in-memory STOMP broker through the spring-messaging module. A malicious user (or attacker) can craft a message to the broker that can lead to a regular expression, denial of service attack.</system-out><system-err>location: /Users/user/.m2/repository/org/springframework/boot/spring-boot-actuator/2.3.4.RELEASE/spring-boot-actuator-2.3.4.RELEASE.jar</system-err></testcase><testcase classname="CVE-2020-5421" name="pkg:maven/org.springframework.boot/spring-boot-actuator@2.3.4.RELEASE"><failure message="cvssV3: MEDIUM, score: 6.5 (CVSS:3.1/AV:N/AC:H/PR:L/UI:R/S:C/C:L/I:H/A:N)"/><system-out>In Spring Framework versions 5.2.0 - 5.2.8, 5.1.0 - 5.1.17, 5.0.0 - 5.0.18, 4.3.0 - 4.3.28, and older unsupported versions, the protections against RFD attacks from CVE-2015-5211 may be bypassed depending on the browser used through the use of a jsessionid path parameter.</system-out><system-err>location: /Users/user/.m2/repository/org/springframework/boot/spring-boot-actuator/2.3.4.RELEASE/spring-boot-actuator-2.3.4.RELEASE.jar</system-err></testcase><testcase classname="CVE-2022-22950" name="pkg:maven/org.springframework.boot/spring-boot-actuator@2.3.4.RELEASE"><failure message="cvssV3: MEDIUM, score: 6.5 (CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H)"/><system-out>n Spring Framework versions 5.3.0 - 5.3.16 and older unsupported versions, it is possible for a user to provide a specially crafted SpEL expression that may cause a denial of service condition.</system-out><system-err>location: /Users/user/.m2/repository/org/springframework/boot/spring-boot-actuator/2.3.4.RELEASE/spring-boot-actuator-2.3.4.RELEASE.jar</system-err></testcase><testcase classname="CVE-2022-22965" name="pkg:maven/org.springframework.boot/spring-boot-actuator@2.3.4.RELEASE"><failure message="cvssV3: CRITICAL, score: 9.8 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H)"/><system-out>A Spring MVC or Spring WebFlux application running on JDK 9+ may be vulnerable to remote code execution (RCE) via data binding. The specific exploit requires the application to run on Tomcat as a WAR deployment. If the application is deployed as a Spring Boot executable jar, i.e. the default, it is not vulnerable to the exploit. However, the nature of the vulnerability is more general, and there may be other ways to exploit it.</system-out><system-err>location: /Users/user/.m2/repository/org/springframework/boot/spring-boot-actuator/2.3.4.RELEASE/spring-boot-actuator-2.3.4.RELEASE.jar</system-err></testcase><testcase classname="CVE-2022-22968" name="pkg:maven/org.springframework.boot/spring-boot-actuator@2.3.4.RELEASE"><failure message="cvssV3: MEDIUM, score: 5.3 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N)"/><system-out>In Spring Framework versions 5.3.0 - 5.3.18, 5.2.0 - 5.2.20, and older unsupported versions, the patterns for disallowedFields on a DataBinder are case sensitive which means a field is not effectively protected unless it is listed with both upper and lower case for the first character of the field, including upper and lower case for the first character of all nested fields within the property path.</system-out><system-err>location: /Users/user/.m2/repository/org/springframework/boot/spring-boot-actuator/2.3.4.RELEASE/spring-boot-actuator-2.3.4.RELEASE.jar</system-err></testcase><testcase classname="CVE-2022-22970" name="pkg:maven/org.springframework.boot/spring-boot-actuator@2.3.4.RELEASE"><failure message="cvssV3: MEDIUM, score: 5.3 (CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:N/I:N/A:H)"/><system-out>In spring framework versions prior to 5.3.20+ , 5.2.22+ and old unsupported versions, applications that handle file uploads are vulnerable to DoS attack if they rely on data binding to set a MultipartFile or javax.servlet.Part to a field in a model object.</system-out><system-err>location: /Users/user/.m2/repository/org/springframework/boot/spring-boot-actuator/2.3.4.RELEASE/spring-boot-actuator-2.3.4.RELEASE.jar</system-err></testcase><testcase classname="CVE-2023-20861" name="pkg:maven/org.springframework.boot/spring-boot-actuator@2.3.4.RELEASE"><failure message="cvssV3: MEDIUM, score: 6.5 (CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H)"/><system-out>In Spring Framework versions 6.0.0 - 6.0.6, 5.3.0 - 5.3.25, 5.2.0.RELEASE - 5.2.22.RELEASE, and older unsupported versions, it is possible for a user to provide a specially crafted SpEL expression that may cause a denial-of-service (DoS) condition.</system-out><system-err>location: /Users/user/.m2/repository/org/springframework/boot/spring-boot-actuator/2.3.4.RELEASE/spring-boot-actuator-2.3.4.RELEASE.jar</system-err></testcase><testcase classname="CVE-2023-20873" name="pkg:maven/org.springframework.boot/spring-boot-actuator@2.3.4.RELEASE"><failure message="cvssV3: CRITICAL, score: 9.8 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H)"/><system-out>In Spring Boot versions 3.0.0 - 3.0.5, 2.7.0 - 2.7.10, and older unsupported versions, an application that is deployed to Cloud Foundry could be susceptible to a security bypass. Users of affected versions should apply the following mitigation: 3.0.x users should upgrade to 3.0.6+. 2.7.x users should upgrade to 2.7.11+. Users of older, unsupported versions should upgrade to 3.0.6+ or 2.7.11+.</system-out><system-err>location: /Users/user/.m2/repository/org/springframework/boot/spring-boot-actuator/2.3.4.RELEASE/spring-boot-actuator-2.3.4.RELEASE.jar</system-err></testcase><testcase classname="CVE-2023-20883" name="pkg:maven/org.springframework.boot/spring-boot-actuator@2.3.4.RELEASE"><failure message="cvssV3: HIGH, score: 7.5 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H)"/><system-out>In Spring Boot versions 3.0.0 - 3.0.6, 2.7.0 - 2.7.11, 2.6.0 - 2.6.14, 2.5.0 - 2.5.14 and older unsupported versions, there is potential for a denial-of-service (DoS) attack if Spring MVC is used together with a reverse proxy cache.</system-out><system-err>location: /Users/user/.m2/repository/org/springframework/boot/spring-boot-actuator/2.3.4.RELEASE/spring-boot-actuator-2.3.4.RELEASE.jar</system-err></testcase><testcase classname="CVE-2023-34055" name="pkg:maven/org.springframework.boot/spring-boot-actuator@2.3.4.RELEASE"><failure message="cvssV2: MEDIUM, score: 6.5 (/AV:N/AC:L/Au:/C:N/I:N/A:H)"/><system-out>In Spring Boot versions 2.7.0 - 2.7.17, 3.0.0-3.0.12 and 3.1.0-3.1.5, it is possible for a user to provide specially crafted HTTP requests that may cause a denial-of-service (DoS) condition.

Specifically, an application is vulnerable when all of the following are true:

  *  the application uses Spring MVC or Spring WebFlux
  *  org.springframework.boot:spring-boot-actuatorÂ is on the classpath



</system-out><system-err>location: /Users/user/.m2/repository/org/springframework/boot/spring-boot-actuator/2.3.4.RELEASE/spring-boot-actuator-2.3.4.RELEASE.jar</system-err></testcase></testsuite><testsuite failures="15" id="30" name="/Users/user/.m2/repository/org/springframework/boot/spring-boot-starter/2.3.4.RELEASE/spring-boot-starter-2.3.4.RELEASE.jar" package="spring-boot-starter-2.3.4.RELEASE.jar" skipped="0" tests="15" timestamp="2024-08-01T01:25:04.946"><testcase classname="CVE-2013-4152" name="pkg:maven/org.springframework.boot/spring-boot-starter@2.3.4.RELEASE"><failure message="cvssV2: MEDIUM, score: 6.8 (/AV:N/AC:M/Au:N/C:P/I:P/A:P)"/><system-out>The Spring OXM wrapper in Spring Framework before 3.2.4 and 4.0.0.M1, when using the JAXB marshaller, does not disable entity resolution, which allows context-dependent attackers to read arbitrary files, cause a denial of service, and conduct CSRF attacks via an XML external entity declaration in conjunction with an entity reference in a (1) DOMSource, (2) StAXSource, (3) SAXSource, or (4) StreamSource, aka an XML External Entity (XXE) issue.</system-out><system-err>location: /Users/user/.m2/repository/org/springframework/boot/spring-boot-starter/2.3.4.RELEASE/spring-boot-starter-2.3.4.RELEASE.jar</system-err></testcase><testcase classname="CVE-2013-7315" name="pkg:maven/org.springframework.boot/spring-boot-starter@2.3.4.RELEASE"><failure message="cvssV2: MEDIUM, score: 6.8 (/AV:N/AC:M/Au:N/C:P/I:P/A:P)"/><system-out>The Spring MVC in Spring Framework before 3.2.4 and 4.0.0.M1 through 4.0.0.M2 does not disable external entity resolution for the StAX XMLInputFactory, which allows context-dependent attackers to read arbitrary files, cause a denial of service, and conduct CSRF attacks via crafted XML with JAXB, aka an XML External Entity (XXE) issue, and a different vulnerability than CVE-2013-4152.  NOTE: this issue was SPLIT from CVE-2013-4152 due to different affected versions.</system-out><system-err>location: /Users/user/.m2/repository/org/springframework/boot/spring-boot-starter/2.3.4.RELEASE/spring-boot-starter-2.3.4.RELEASE.jar</system-err></testcase><testcase classname="CVE-2014-0054" name="pkg:maven/org.springframework.boot/spring-boot-starter@2.3.4.RELEASE"><failure message="cvssV2: MEDIUM, score: 6.8 (/AV:N/AC:M/Au:N/C:P/I:P/A:P)"/><system-out>The Jaxb2RootElementHttpMessageConverter in Spring MVC in Spring Framework before 3.2.8 and 4.0.0 before 4.0.2 does not disable external entity resolution, which allows remote attackers to read arbitrary files, cause a denial of service, and conduct CSRF attacks via crafted XML, aka an XML External Entity (XXE) issue.  NOTE: this vulnerability exists because of an incomplete fix for CVE-2013-4152, CVE-2013-7315, and CVE-2013-6429.</system-out><system-err>location: /Users/user/.m2/repository/org/springframework/boot/spring-boot-starter/2.3.4.RELEASE/spring-boot-starter-2.3.4.RELEASE.jar</system-err></testcase><testcase classname="CVE-2016-1000027" name="pkg:maven/org.springframework.boot/spring-boot-starter@2.3.4.RELEASE"><failure message="cvssV3: CRITICAL, score: 9.8 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H)"/><system-out>Pivotal Spring Framework through 5.3.16 suffers from a potential remote code execution (RCE) issue if used for Java deserialization of untrusted data. Depending on how the library is implemented within a product, this issue may or not occur, and authentication may be required. NOTE: the vendor&apos;s position is that untrusted data is not an intended use case. The product&apos;s behavior will not be changed because some users rely on deserialization of trusted data.</system-out><system-err>location: /Users/user/.m2/repository/org/springframework/boot/spring-boot-starter/2.3.4.RELEASE/spring-boot-starter-2.3.4.RELEASE.jar</system-err></testcase><testcase classname="CVE-2018-11039" name="pkg:maven/org.springframework.boot/spring-boot-starter@2.3.4.RELEASE"><failure message="cvssV3: MEDIUM, score: 5.9 (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N)"/><system-out>Spring Framework (versions 5.0.x prior to 5.0.7, versions 4.3.x prior to 4.3.18, and older unsupported versions) allow web applications to change the HTTP request method to any HTTP method (including TRACE) using the HiddenHttpMethodFilter in Spring MVC. If an application has a pre-existing XSS vulnerability, a malicious user (or attacker) can use this filter to escalate to an XST (Cross Site Tracing) attack.</system-out><system-err>location: /Users/user/.m2/repository/org/springframework/boot/spring-boot-starter/2.3.4.RELEASE/spring-boot-starter-2.3.4.RELEASE.jar</system-err></testcase><testcase classname="CVE-2018-11040" name="pkg:maven/org.springframework.boot/spring-boot-starter@2.3.4.RELEASE"><failure message="cvssV3: HIGH, score: 7.5 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N)"/><system-out>Spring Framework, versions 5.0.x prior to 5.0.7 and 4.3.x prior to 4.3.18 and older unsupported versions, allows web applications to enable cross-domain requests via JSONP (JSON with Padding) through AbstractJsonpResponseBodyAdvice for REST controllers and MappingJackson2JsonView for browser requests. Both are not enabled by default in Spring Framework nor Spring Boot, however, when MappingJackson2JsonView is configured in an application, JSONP support is automatically ready to use through the &quot;jsonp&quot; and &quot;callback&quot; JSONP parameters, enabling cross-domain requests.</system-out><system-err>location: /Users/user/.m2/repository/org/springframework/boot/spring-boot-starter/2.3.4.RELEASE/spring-boot-starter-2.3.4.RELEASE.jar</system-err></testcase><testcase classname="CVE-2018-1257" name="pkg:maven/org.springframework.boot/spring-boot-starter@2.3.4.RELEASE"><failure message="cvssV3: MEDIUM, score: 6.5 (CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H)"/><system-out>Spring Framework, versions 5.0.x prior to 5.0.6, versions 4.3.x prior to 4.3.17, and older unsupported versions allows applications to expose STOMP over WebSocket endpoints with a simple, in-memory STOMP broker through the spring-messaging module. A malicious user (or attacker) can craft a message to the broker that can lead to a regular expression, denial of service attack.</system-out><system-err>location: /Users/user/.m2/repository/org/springframework/boot/spring-boot-starter/2.3.4.RELEASE/spring-boot-starter-2.3.4.RELEASE.jar</system-err></testcase><testcase classname="CVE-2020-5421" name="pkg:maven/org.springframework.boot/spring-boot-starter@2.3.4.RELEASE"><failure message="cvssV3: MEDIUM, score: 6.5 (CVSS:3.1/AV:N/AC:H/PR:L/UI:R/S:C/C:L/I:H/A:N)"/><system-out>In Spring Framework versions 5.2.0 - 5.2.8, 5.1.0 - 5.1.17, 5.0.0 - 5.0.18, 4.3.0 - 4.3.28, and older unsupported versions, the protections against RFD attacks from CVE-2015-5211 may be bypassed depending on the browser used through the use of a jsessionid path parameter.</system-out><system-err>location: /Users/user/.m2/repository/org/springframework/boot/spring-boot-starter/2.3.4.RELEASE/spring-boot-starter-2.3.4.RELEASE.jar</system-err></testcase><testcase classname="CVE-2022-22950" name="pkg:maven/org.springframework.boot/spring-boot-starter@2.3.4.RELEASE"><failure message="cvssV3: MEDIUM, score: 6.5 (CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H)"/><system-out>n Spring Framework versions 5.3.0 - 5.3.16 and older unsupported versions, it is possible for a user to provide a specially crafted SpEL expression that may cause a denial of service condition.</system-out><system-err>location: /Users/user/.m2/repository/org/springframework/boot/spring-boot-starter/2.3.4.RELEASE/spring-boot-starter-2.3.4.RELEASE.jar</system-err></testcase><testcase classname="CVE-2022-22965" name="pkg:maven/org.springframework.boot/spring-boot-starter@2.3.4.RELEASE"><failure message="cvssV3: CRITICAL, score: 9.8 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H)"/><system-out>A Spring MVC or Spring WebFlux application running on JDK 9+ may be vulnerable to remote code execution (RCE) via data binding. The specific exploit requires the application to run on Tomcat as a WAR deployment. If the application is deployed as a Spring Boot executable jar, i.e. the default, it is not vulnerable to the exploit. However, the nature of the vulnerability is more general, and there may be other ways to exploit it.</system-out><system-err>location: /Users/user/.m2/repository/org/springframework/boot/spring-boot-starter/2.3.4.RELEASE/spring-boot-starter-2.3.4.RELEASE.jar</system-err></testcase><testcase classname="CVE-2022-22968" name="pkg:maven/org.springframework.boot/spring-boot-starter@2.3.4.RELEASE"><failure message="cvssV3: MEDIUM, score: 5.3 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N)"/><system-out>In Spring Framework versions 5.3.0 - 5.3.18, 5.2.0 - 5.2.20, and older unsupported versions, the patterns for disallowedFields on a DataBinder are case sensitive which means a field is not effectively protected unless it is listed with both upper and lower case for the first character of the field, including upper and lower case for the first character of all nested fields within the property path.</system-out><system-err>location: /Users/user/.m2/repository/org/springframework/boot/spring-boot-starter/2.3.4.RELEASE/spring-boot-starter-2.3.4.RELEASE.jar</system-err></testcase><testcase classname="CVE-2022-22970" name="pkg:maven/org.springframework.boot/spring-boot-starter@2.3.4.RELEASE"><failure message="cvssV3: MEDIUM, score: 5.3 (CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:N/I:N/A:H)"/><system-out>In spring framework versions prior to 5.3.20+ , 5.2.22+ and old unsupported versions, applications that handle file uploads are vulnerable to DoS attack if they rely on data binding to set a MultipartFile or javax.servlet.Part to a field in a model object.</system-out><system-err>location: /Users/user/.m2/repository/org/springframework/boot/spring-boot-starter/2.3.4.RELEASE/spring-boot-starter-2.3.4.RELEASE.jar</system-err></testcase><testcase classname="CVE-2023-20861" name="pkg:maven/org.springframework.boot/spring-boot-starter@2.3.4.RELEASE"><failure message="cvssV3: MEDIUM, score: 6.5 (CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H)"/><system-out>In Spring Framework versions 6.0.0 - 6.0.6, 5.3.0 - 5.3.25, 5.2.0.RELEASE - 5.2.22.RELEASE, and older unsupported versions, it is possible for a user to provide a specially crafted SpEL expression that may cause a denial-of-service (DoS) condition.</system-out><system-err>location: /Users/user/.m2/repository/org/springframework/boot/spring-boot-starter/2.3.4.RELEASE/spring-boot-starter-2.3.4.RELEASE.jar</system-err></testcase><testcase classname="CVE-2023-20873" name="pkg:maven/org.springframework.boot/spring-boot-starter@2.3.4.RELEASE"><failure message="cvssV3: CRITICAL, score: 9.8 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H)"/><system-out>In Spring Boot versions 3.0.0 - 3.0.5, 2.7.0 - 2.7.10, and older unsupported versions, an application that is deployed to Cloud Foundry could be susceptible to a security bypass. Users of affected versions should apply the following mitigation: 3.0.x users should upgrade to 3.0.6+. 2.7.x users should upgrade to 2.7.11+. Users of older, unsupported versions should upgrade to 3.0.6+ or 2.7.11+.</system-out><system-err>location: /Users/user/.m2/repository/org/springframework/boot/spring-boot-starter/2.3.4.RELEASE/spring-boot-starter-2.3.4.RELEASE.jar</system-err></testcase><testcase classname="CVE-2023-20883" name="pkg:maven/org.springframework.boot/spring-boot-starter@2.3.4.RELEASE"><failure message="cvssV3: HIGH, score: 7.5 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H)"/><system-out>In Spring Boot versions 3.0.0 - 3.0.6, 2.7.0 - 2.7.11, 2.6.0 - 2.6.14, 2.5.0 - 2.5.14 and older unsupported versions, there is potential for a denial-of-service (DoS) attack if Spring MVC is used together with a reverse proxy cache.</system-out><system-err>location: /Users/user/.m2/repository/org/springframework/boot/spring-boot-starter/2.3.4.RELEASE/spring-boot-starter-2.3.4.RELEASE.jar</system-err></testcase></testsuite><testsuite failures="11" id="31" name="/Users/user/.m2/repository/org/springframework/spring-core/5.2.9.RELEASE/spring-core-5.2.9.RELEASE.jar" package="spring-core-5.2.9.RELEASE.jar" skipped="0" tests="11" timestamp="2024-08-01T01:25:04.946"><testcase classname="CVE-2016-1000027" name="pkg:maven/org.springframework/spring-core@5.2.9.RELEASE"><failure message="cvssV3: CRITICAL, score: 9.8 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H)"/><system-out>Pivotal Spring Framework through 5.3.16 suffers from a potential remote code execution (RCE) issue if used for Java deserialization of untrusted data. Depending on how the library is implemented within a product, this issue may or not occur, and authentication may be required. NOTE: the vendor&apos;s position is that untrusted data is not an intended use case. The product&apos;s behavior will not be changed because some users rely on deserialization of trusted data.</system-out><system-err>location: /Users/user/.m2/repository/org/springframework/spring-core/5.2.9.RELEASE/spring-core-5.2.9.RELEASE.jar</system-err></testcase><testcase classname="CVE-2021-22060" name="pkg:maven/org.springframework/spring-core@5.2.9.RELEASE"><failure message="cvssV3: MEDIUM, score: 4.3 (CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:L/A:N)"/><system-out>In Spring Framework versions 5.3.0 - 5.3.13, 5.2.0 - 5.2.18, and older unsupported versions, it is possible for a user to provide malicious input to cause the insertion of additional log entries. This is a follow-up to CVE-2021-22096 that protects against additional types of input and in more places of the Spring Framework codebase.</system-out><system-err>location: /Users/user/.m2/repository/org/springframework/spring-core/5.2.9.RELEASE/spring-core-5.2.9.RELEASE.jar</system-err></testcase><testcase classname="CVE-2021-22096" name="pkg:maven/org.springframework/spring-core@5.2.9.RELEASE"><failure message="cvssV3: MEDIUM, score: 4.3 (CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:L/A:N)"/><system-out>In Spring Framework versions 5.3.0 - 5.3.10, 5.2.0 - 5.2.17, and older unsupported versions, it is possible for a user to provide malicious input to cause the insertion of additional log entries.</system-out><system-err>location: /Users/user/.m2/repository/org/springframework/spring-core/5.2.9.RELEASE/spring-core-5.2.9.RELEASE.jar</system-err></testcase><testcase classname="CVE-2021-22118" name="pkg:maven/org.springframework/spring-core@5.2.9.RELEASE"><failure message="cvssV3: HIGH, score: 7.8 (CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H)"/><system-out>In Spring Framework, versions 5.2.x prior to 5.2.15 and versions 5.3.x prior to 5.3.7, a WebFlux application is vulnerable to a privilege escalation: by (re)creating the temporary storage directory, a locally authenticated malicious user can read or modify files that have been uploaded to the WebFlux application, or overwrite arbitrary files with multipart request data.</system-out><system-err>location: /Users/user/.m2/repository/org/springframework/spring-core/5.2.9.RELEASE/spring-core-5.2.9.RELEASE.jar</system-err></testcase><testcase classname="CVE-2022-22950" name="pkg:maven/org.springframework/spring-core@5.2.9.RELEASE"><failure message="cvssV3: MEDIUM, score: 6.5 (CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H)"/><system-out>n Spring Framework versions 5.3.0 - 5.3.16 and older unsupported versions, it is possible for a user to provide a specially crafted SpEL expression that may cause a denial of service condition.</system-out><system-err>location: /Users/user/.m2/repository/org/springframework/spring-core/5.2.9.RELEASE/spring-core-5.2.9.RELEASE.jar</system-err></testcase><testcase classname="CVE-2022-22965" name="pkg:maven/org.springframework/spring-core@5.2.9.RELEASE"><failure message="cvssV3: CRITICAL, score: 9.8 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H)"/><system-out>A Spring MVC or Spring WebFlux application running on JDK 9+ may be vulnerable to remote code execution (RCE) via data binding. The specific exploit requires the application to run on Tomcat as a WAR deployment. If the application is deployed as a Spring Boot executable jar, i.e. the default, it is not vulnerable to the exploit. However, the nature of the vulnerability is more general, and there may be other ways to exploit it.</system-out><system-err>location: /Users/user/.m2/repository/org/springframework/spring-core/5.2.9.RELEASE/spring-core-5.2.9.RELEASE.jar</system-err></testcase><testcase classname="CVE-2022-22968" name="pkg:maven/org.springframework/spring-core@5.2.9.RELEASE"><failure message="cvssV3: MEDIUM, score: 5.3 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N)"/><system-out>In Spring Framework versions 5.3.0 - 5.3.18, 5.2.0 - 5.2.20, and older unsupported versions, the patterns for disallowedFields on a DataBinder are case sensitive which means a field is not effectively protected unless it is listed with both upper and lower case for the first character of the field, including upper and lower case for the first character of all nested fields within the property path.</system-out><system-err>location: /Users/user/.m2/repository/org/springframework/spring-core/5.2.9.RELEASE/spring-core-5.2.9.RELEASE.jar</system-err></testcase><testcase classname="CVE-2022-22970" name="pkg:maven/org.springframework/spring-core@5.2.9.RELEASE"><failure message="cvssV3: MEDIUM, score: 5.3 (CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:N/I:N/A:H)"/><system-out>In spring framework versions prior to 5.3.20+ , 5.2.22+ and old unsupported versions, applications that handle file uploads are vulnerable to DoS attack if they rely on data binding to set a MultipartFile or javax.servlet.Part to a field in a model object.</system-out><system-err>location: /Users/user/.m2/repository/org/springframework/spring-core/5.2.9.RELEASE/spring-core-5.2.9.RELEASE.jar</system-err></testcase><testcase classname="CVE-2022-22971" name="pkg:maven/org.springframework/spring-core@5.2.9.RELEASE"><failure message="cvssV3: MEDIUM, score: 6.5 (CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H)"/><system-out>In spring framework versions prior to 5.3.20+ , 5.2.22+ and old unsupported versions, application with a STOMP over WebSocket endpoint is vulnerable to a denial of service attack by an authenticated user.</system-out><system-err>location: /Users/user/.m2/repository/org/springframework/spring-core/5.2.9.RELEASE/spring-core-5.2.9.RELEASE.jar</system-err></testcase><testcase classname="CVE-2023-20861" name="pkg:maven/org.springframework/spring-core@5.2.9.RELEASE"><failure message="cvssV3: MEDIUM, score: 6.5 (CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H)"/><system-out>In Spring Framework versions 6.0.0 - 6.0.6, 5.3.0 - 5.3.25, 5.2.0.RELEASE - 5.2.22.RELEASE, and older unsupported versions, it is possible for a user to provide a specially crafted SpEL expression that may cause a denial-of-service (DoS) condition.</system-out><system-err>location: /Users/user/.m2/repository/org/springframework/spring-core/5.2.9.RELEASE/spring-core-5.2.9.RELEASE.jar</system-err></testcase><testcase classname="CVE-2023-20863" name="pkg:maven/org.springframework/spring-core@5.2.9.RELEASE"><failure message="cvssV3: MEDIUM, score: 6.5 (CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H)"/><system-out>In spring framework versions prior to 5.2.24 release+ ,5.3.27+ and 6.0.8+ , it is possible for a user to provide a specially crafted SpEL expression that may cause a denial-of-service (DoS) condition.</system-out><system-err>location: /Users/user/.m2/repository/org/springframework/spring-core/5.2.9.RELEASE/spring-core-5.2.9.RELEASE.jar</system-err></testcase></testsuite><testsuite failures="13" id="32" name="/Users/user/.m2/repository/org/springframework/spring-web/5.2.9.RELEASE/spring-web-5.2.9.RELEASE.jar" package="spring-web-5.2.9.RELEASE.jar" skipped="0" tests="13" timestamp="2024-08-01T01:25:04.946"><testcase classname="CVE-2016-1000027" name="pkg:maven/org.springframework/spring-web@5.2.9.RELEASE"><failure message="cvssV3: CRITICAL, score: 9.8 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H)"/><system-out>Pivotal Spring Framework through 5.3.16 suffers from a potential remote code execution (RCE) issue if used for Java deserialization of untrusted data. Depending on how the library is implemented within a product, this issue may or not occur, and authentication may be required. NOTE: the vendor&apos;s position is that untrusted data is not an intended use case. The product&apos;s behavior will not be changed because some users rely on deserialization of trusted data.</system-out><system-err>location: /Users/user/.m2/repository/org/springframework/spring-web/5.2.9.RELEASE/spring-web-5.2.9.RELEASE.jar</system-err></testcase><testcase classname="CVE-2021-22060" name="pkg:maven/org.springframework/spring-web@5.2.9.RELEASE"><failure message="cvssV3: MEDIUM, score: 4.3 (CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:L/A:N)"/><system-out>In Spring Framework versions 5.3.0 - 5.3.13, 5.2.0 - 5.2.18, and older unsupported versions, it is possible for a user to provide malicious input to cause the insertion of additional log entries. This is a follow-up to CVE-2021-22096 that protects against additional types of input and in more places of the Spring Framework codebase.</system-out><system-err>location: /Users/user/.m2/repository/org/springframework/spring-web/5.2.9.RELEASE/spring-web-5.2.9.RELEASE.jar</system-err></testcase><testcase classname="CVE-2021-22096" name="pkg:maven/org.springframework/spring-web@5.2.9.RELEASE"><failure message="cvssV3: MEDIUM, score: 4.3 (CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:L/A:N)"/><system-out>In Spring Framework versions 5.3.0 - 5.3.10, 5.2.0 - 5.2.17, and older unsupported versions, it is possible for a user to provide malicious input to cause the insertion of additional log entries.</system-out><system-err>location: /Users/user/.m2/repository/org/springframework/spring-web/5.2.9.RELEASE/spring-web-5.2.9.RELEASE.jar</system-err></testcase><testcase classname="CVE-2021-22118" name="pkg:maven/org.springframework/spring-web@5.2.9.RELEASE"><failure message="cvssV3: HIGH, score: 7.8 (CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H)"/><system-out>In Spring Framework, versions 5.2.x prior to 5.2.15 and versions 5.3.x prior to 5.3.7, a WebFlux application is vulnerable to a privilege escalation: by (re)creating the temporary storage directory, a locally authenticated malicious user can read or modify files that have been uploaded to the WebFlux application, or overwrite arbitrary files with multipart request data.</system-out><system-err>location: /Users/user/.m2/repository/org/springframework/spring-web/5.2.9.RELEASE/spring-web-5.2.9.RELEASE.jar</system-err></testcase><testcase classname="CVE-2022-22950" name="pkg:maven/org.springframework/spring-web@5.2.9.RELEASE"><failure message="cvssV3: MEDIUM, score: 6.5 (CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H)"/><system-out>n Spring Framework versions 5.3.0 - 5.3.16 and older unsupported versions, it is possible for a user to provide a specially crafted SpEL expression that may cause a denial of service condition.</system-out><system-err>location: /Users/user/.m2/repository/org/springframework/spring-web/5.2.9.RELEASE/spring-web-5.2.9.RELEASE.jar</system-err></testcase><testcase classname="CVE-2022-22965" name="pkg:maven/org.springframework/spring-web@5.2.9.RELEASE"><failure message="cvssV3: CRITICAL, score: 9.8 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H)"/><system-out>A Spring MVC or Spring WebFlux application running on JDK 9+ may be vulnerable to remote code execution (RCE) via data binding. The specific exploit requires the application to run on Tomcat as a WAR deployment. If the application is deployed as a Spring Boot executable jar, i.e. the default, it is not vulnerable to the exploit. However, the nature of the vulnerability is more general, and there may be other ways to exploit it.</system-out><system-err>location: /Users/user/.m2/repository/org/springframework/spring-web/5.2.9.RELEASE/spring-web-5.2.9.RELEASE.jar</system-err></testcase><testcase classname="CVE-2022-22968" name="pkg:maven/org.springframework/spring-web@5.2.9.RELEASE"><failure message="cvssV3: MEDIUM, score: 5.3 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N)"/><system-out>In Spring Framework versions 5.3.0 - 5.3.18, 5.2.0 - 5.2.20, and older unsupported versions, the patterns for disallowedFields on a DataBinder are case sensitive which means a field is not effectively protected unless it is listed with both upper and lower case for the first character of the field, including upper and lower case for the first character of all nested fields within the property path.</system-out><system-err>location: /Users/user/.m2/repository/org/springframework/spring-web/5.2.9.RELEASE/spring-web-5.2.9.RELEASE.jar</system-err></testcase><testcase classname="CVE-2022-22970" name="pkg:maven/org.springframework/spring-web@5.2.9.RELEASE"><failure message="cvssV3: MEDIUM, score: 5.3 (CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:N/I:N/A:H)"/><system-out>In spring framework versions prior to 5.3.20+ , 5.2.22+ and old unsupported versions, applications that handle file uploads are vulnerable to DoS attack if they rely on data binding to set a MultipartFile or javax.servlet.Part to a field in a model object.</system-out><system-err>location: /Users/user/.m2/repository/org/springframework/spring-web/5.2.9.RELEASE/spring-web-5.2.9.RELEASE.jar</system-err></testcase><testcase classname="CVE-2022-22971" name="pkg:maven/org.springframework/spring-web@5.2.9.RELEASE"><failure message="cvssV3: MEDIUM, score: 6.5 (CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H)"/><system-out>In spring framework versions prior to 5.3.20+ , 5.2.22+ and old unsupported versions, application with a STOMP over WebSocket endpoint is vulnerable to a denial of service attack by an authenticated user.</system-out><system-err>location: /Users/user/.m2/repository/org/springframework/spring-web/5.2.9.RELEASE/spring-web-5.2.9.RELEASE.jar</system-err></testcase><testcase classname="CVE-2023-20861" name="pkg:maven/org.springframework/spring-web@5.2.9.RELEASE"><failure message="cvssV3: MEDIUM, score: 6.5 (CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H)"/><system-out>In Spring Framework versions 6.0.0 - 6.0.6, 5.3.0 - 5.3.25, 5.2.0.RELEASE - 5.2.22.RELEASE, and older unsupported versions, it is possible for a user to provide a specially crafted SpEL expression that may cause a denial-of-service (DoS) condition.</system-out><system-err>location: /Users/user/.m2/repository/org/springframework/spring-web/5.2.9.RELEASE/spring-web-5.2.9.RELEASE.jar</system-err></testcase><testcase classname="CVE-2023-20863" name="pkg:maven/org.springframework/spring-web@5.2.9.RELEASE"><failure message="cvssV3: MEDIUM, score: 6.5 (CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H)"/><system-out>In spring framework versions prior to 5.2.24 release+ ,5.3.27+ and 6.0.8+ , it is possible for a user to provide a specially crafted SpEL expression that may cause a denial-of-service (DoS) condition.</system-out><system-err>location: /Users/user/.m2/repository/org/springframework/spring-web/5.2.9.RELEASE/spring-web-5.2.9.RELEASE.jar</system-err></testcase><testcase classname="CVE-2024-22243" name="pkg:maven/org.springframework/spring-web@5.2.9.RELEASE"><failure message="cvssV2: HIGH, score: 8.1 (/AV:N/AC:L/Au:/C:H/I:H/A:N)"/><system-out>Applications that use UriComponentsBuilderÂ to parse an externally provided URL (e.g. through a query parameter) ANDÂ perform validation checks on the host of the parsed URL may be vulnerable to a  open redirect https://cwe.mitre.org/data/definitions/601.html Â attack or to a SSRF attack if the URL is used after passing validation checks.


Sonatype&apos;s research suggests that this CVE&apos;s details differ from those defined at NVD. See https://ossindex.sonatype.org/vulnerability/CVE-2024-22243 for details</system-out><system-err>location: /Users/user/.m2/repository/org/springframework/spring-web/5.2.9.RELEASE/spring-web-5.2.9.RELEASE.jar</system-err></testcase><testcase classname="CVE-2024-22262" name="pkg:maven/org.springframework/spring-web@5.2.9.RELEASE"><failure message="cvssV2: HIGH, score: 8.1 (/AV:N/AC:L/Au:/C:H/I:H/A:N)"/><system-out>Applications that use UriComponentsBuilderÂ to parse an externally provided URL (e.g. through a query parameter) ANDÂ perform validation checks on the host of the parsed URL may be vulnerable to a  open redirect https://cwe.mitre.org/data/definitions/601.html Â attack or to a SSRF attack if the URL is used after passing validation checks.

This is the same as  CVE-2024-22259 https://spring.io/security/cve-2024-22259 Â and  CVE-2024-22243 https://spring.io/security/cve-2024-22243 , but with different input.

</system-out><system-err>location: /Users/user/.m2/repository/org/springframework/spring-web/5.2.9.RELEASE/spring-web-5.2.9.RELEASE.jar</system-err></testcase></testsuite><testsuite failures="11" id="33" name="/Users/user/.m2/repository/org/springframework/spring-webmvc/5.2.9.RELEASE/spring-webmvc-5.2.9.RELEASE.jar" package="spring-webmvc-5.2.9.RELEASE.jar" skipped="0" tests="11" timestamp="2024-08-01T01:25:04.946"><testcase classname="CVE-2016-1000027" name="pkg:maven/org.springframework/spring-webmvc@5.2.9.RELEASE"><failure message="cvssV3: CRITICAL, score: 9.8 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H)"/><system-out>Pivotal Spring Framework through 5.3.16 suffers from a potential remote code execution (RCE) issue if used for Java deserialization of untrusted data. Depending on how the library is implemented within a product, this issue may or not occur, and authentication may be required. NOTE: the vendor&apos;s position is that untrusted data is not an intended use case. The product&apos;s behavior will not be changed because some users rely on deserialization of trusted data.</system-out><system-err>location: /Users/user/.m2/repository/org/springframework/spring-webmvc/5.2.9.RELEASE/spring-webmvc-5.2.9.RELEASE.jar</system-err></testcase><testcase classname="CVE-2021-22060" name="pkg:maven/org.springframework/spring-webmvc@5.2.9.RELEASE"><failure message="cvssV3: MEDIUM, score: 4.3 (CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:L/A:N)"/><system-out>In Spring Framework versions 5.3.0 - 5.3.13, 5.2.0 - 5.2.18, and older unsupported versions, it is possible for a user to provide malicious input to cause the insertion of additional log entries. This is a follow-up to CVE-2021-22096 that protects against additional types of input and in more places of the Spring Framework codebase.</system-out><system-err>location: /Users/user/.m2/repository/org/springframework/spring-webmvc/5.2.9.RELEASE/spring-webmvc-5.2.9.RELEASE.jar</system-err></testcase><testcase classname="CVE-2021-22096" name="pkg:maven/org.springframework/spring-webmvc@5.2.9.RELEASE"><failure message="cvssV3: MEDIUM, score: 4.3 (CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:L/A:N)"/><system-out>In Spring Framework versions 5.3.0 - 5.3.10, 5.2.0 - 5.2.17, and older unsupported versions, it is possible for a user to provide malicious input to cause the insertion of additional log entries.</system-out><system-err>location: /Users/user/.m2/repository/org/springframework/spring-webmvc/5.2.9.RELEASE/spring-webmvc-5.2.9.RELEASE.jar</system-err></testcase><testcase classname="CVE-2021-22118" name="pkg:maven/org.springframework/spring-webmvc@5.2.9.RELEASE"><failure message="cvssV3: HIGH, score: 7.8 (CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H)"/><system-out>In Spring Framework, versions 5.2.x prior to 5.2.15 and versions 5.3.x prior to 5.3.7, a WebFlux application is vulnerable to a privilege escalation: by (re)creating the temporary storage directory, a locally authenticated malicious user can read or modify files that have been uploaded to the WebFlux application, or overwrite arbitrary files with multipart request data.</system-out><system-err>location: /Users/user/.m2/repository/org/springframework/spring-webmvc/5.2.9.RELEASE/spring-webmvc-5.2.9.RELEASE.jar</system-err></testcase><testcase classname="CVE-2022-22950" name="pkg:maven/org.springframework/spring-webmvc@5.2.9.RELEASE"><failure message="cvssV3: MEDIUM, score: 6.5 (CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H)"/><system-out>n Spring Framework versions 5.3.0 - 5.3.16 and older unsupported versions, it is possible for a user to provide a specially crafted SpEL expression that may cause a denial of service condition.</system-out><system-err>location: /Users/user/.m2/repository/org/springframework/spring-webmvc/5.2.9.RELEASE/spring-webmvc-5.2.9.RELEASE.jar</system-err></testcase><testcase classname="CVE-2022-22965" name="pkg:maven/org.springframework/spring-webmvc@5.2.9.RELEASE"><failure message="cvssV3: CRITICAL, score: 9.8 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H)"/><system-out>A Spring MVC or Spring WebFlux application running on JDK 9+ may be vulnerable to remote code execution (RCE) via data binding. The specific exploit requires the application to run on Tomcat as a WAR deployment. If the application is deployed as a Spring Boot executable jar, i.e. the default, it is not vulnerable to the exploit. However, the nature of the vulnerability is more general, and there may be other ways to exploit it.</system-out><system-err>location: /Users/user/.m2/repository/org/springframework/spring-webmvc/5.2.9.RELEASE/spring-webmvc-5.2.9.RELEASE.jar</system-err></testcase><testcase classname="CVE-2022-22968" name="pkg:maven/org.springframework/spring-webmvc@5.2.9.RELEASE"><failure message="cvssV3: MEDIUM, score: 5.3 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N)"/><system-out>In Spring Framework versions 5.3.0 - 5.3.18, 5.2.0 - 5.2.20, and older unsupported versions, the patterns for disallowedFields on a DataBinder are case sensitive which means a field is not effectively protected unless it is listed with both upper and lower case for the first character of the field, including upper and lower case for the first character of all nested fields within the property path.</system-out><system-err>location: /Users/user/.m2/repository/org/springframework/spring-webmvc/5.2.9.RELEASE/spring-webmvc-5.2.9.RELEASE.jar</system-err></testcase><testcase classname="CVE-2022-22970" name="pkg:maven/org.springframework/spring-webmvc@5.2.9.RELEASE"><failure message="cvssV3: MEDIUM, score: 5.3 (CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:N/I:N/A:H)"/><system-out>In spring framework versions prior to 5.3.20+ , 5.2.22+ and old unsupported versions, applications that handle file uploads are vulnerable to DoS attack if they rely on data binding to set a MultipartFile or javax.servlet.Part to a field in a model object.</system-out><system-err>location: /Users/user/.m2/repository/org/springframework/spring-webmvc/5.2.9.RELEASE/spring-webmvc-5.2.9.RELEASE.jar</system-err></testcase><testcase classname="CVE-2022-22971" name="pkg:maven/org.springframework/spring-webmvc@5.2.9.RELEASE"><failure message="cvssV3: MEDIUM, score: 6.5 (CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H)"/><system-out>In spring framework versions prior to 5.3.20+ , 5.2.22+ and old unsupported versions, application with a STOMP over WebSocket endpoint is vulnerable to a denial of service attack by an authenticated user.</system-out><system-err>location: /Users/user/.m2/repository/org/springframework/spring-webmvc/5.2.9.RELEASE/spring-webmvc-5.2.9.RELEASE.jar</system-err></testcase><testcase classname="CVE-2023-20861" name="pkg:maven/org.springframework/spring-webmvc@5.2.9.RELEASE"><failure message="cvssV3: MEDIUM, score: 6.5 (CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H)"/><system-out>In Spring Framework versions 6.0.0 - 6.0.6, 5.3.0 - 5.3.25, 5.2.0.RELEASE - 5.2.22.RELEASE, and older unsupported versions, it is possible for a user to provide a specially crafted SpEL expression that may cause a denial-of-service (DoS) condition.</system-out><system-err>location: /Users/user/.m2/repository/org/springframework/spring-webmvc/5.2.9.RELEASE/spring-webmvc-5.2.9.RELEASE.jar</system-err></testcase><testcase classname="CVE-2023-20863" name="pkg:maven/org.springframework/spring-webmvc@5.2.9.RELEASE"><failure message="cvssV3: MEDIUM, score: 6.5 (CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H)"/><system-out>In spring framework versions prior to 5.2.24 release+ ,5.3.27+ and 6.0.8+ , it is possible for a user to provide a specially crafted SpEL expression that may cause a denial-of-service (DoS) condition.</system-out><system-err>location: /Users/user/.m2/repository/org/springframework/spring-webmvc/5.2.9.RELEASE/spring-webmvc-5.2.9.RELEASE.jar</system-err></testcase></testsuite><testsuite failures="0" id="34" name="/Users/user/.m2/repository/org/springdoc/springdoc-openapi-common/1.6.14/springdoc-openapi-common-1.6.14.jar" package="springdoc-openapi-common-1.6.14.jar" skipped="0" tests="1" timestamp="2024-08-01T01:25:04.946"><testcase classname="dependency-check" name="springdoc-openapi-common-1.6.14.jar"/></testsuite><testsuite failures="0" id="35" name="/Users/user/.m2/repository/org/springdoc/springdoc-openapi-ui/1.6.14/springdoc-openapi-ui-1.6.14.jar" package="springdoc-openapi-ui-1.6.14.jar" skipped="0" tests="1" timestamp="2024-08-01T01:25:04.946"><testcase classname="dependency-check" name="springdoc-openapi-ui-1.6.14.jar"/></testsuite><testsuite failures="0" id="36" name="/Users/user/.m2/repository/org/springdoc/springdoc-openapi-webmvc-core/1.6.14/springdoc-openapi-webmvc-core-1.6.14.jar" package="springdoc-openapi-webmvc-core-1.6.14.jar" skipped="0" tests="1" timestamp="2024-08-01T01:25:04.946"><testcase classname="dependency-check" name="springdoc-openapi-webmvc-core-1.6.14.jar"/></testsuite><testsuite failures="0" id="37" name="/Users/user/.m2/repository/io/swagger/core/v3/swagger-core/2.2.7/swagger-core-2.2.7.jar" package="swagger-core-2.2.7.jar" skipped="0" tests="1" timestamp="2024-08-01T01:25:04.946"><testcase classname="dependency-check" name="swagger-core-2.2.7.jar"/></testsuite><testsuite failures="0" id="38" name="/Users/user/.m2/repository/org/webjars/swagger-ui/4.15.5/swagger-ui-4.15.5.jar" package="swagger-ui-4.15.5.jar" skipped="0" tests="1" timestamp="2024-08-01T01:25:04.946"><testcase classname="dependency-check" name="swagger-ui-4.15.5.jar"/></testsuite><testsuite failures="0" id="39" name="/Users/user/.m2/repository/org/webjars/swagger-ui/4.15.5/swagger-ui-4.15.5.jar/META-INF/resources/webjars/swagger-ui/4.15.5/swagger-initializer.js" package="swagger-ui-4.15.5.jar: swagger-initializer.js" skipped="0" tests="1" timestamp="2024-08-01T01:25:04.946"><testcase classname="dependency-check" name="swagger-ui-4.15.5.jar: swagger-initializer.js"/></testsuite><testsuite failures="0" id="40" name="/Users/user/.m2/repository/org/webjars/swagger-ui/4.15.5/swagger-ui-4.15.5.jar/META-INF/resources/webjars/swagger-ui/4.15.5/swagger-ui-bundle.js" package="swagger-ui-4.15.5.jar: swagger-ui-bundle.js" skipped="0" tests="1" timestamp="2024-08-01T01:25:04.946"><testcase classname="dependency-check" name="swagger-ui-4.15.5.jar: swagger-ui-bundle.js"/></testsuite><testsuite failures="0" id="41" name="/Users/user/.m2/repository/org/webjars/swagger-ui/4.15.5/swagger-ui-4.15.5.jar/META-INF/resources/webjars/swagger-ui/4.15.5/swagger-ui-es-bundle-core.js" package="swagger-ui-4.15.5.jar: swagger-ui-es-bundle-core.js" skipped="0" tests="1" timestamp="2024-08-01T01:25:04.946"><testcase classname="dependency-check" name="swagger-ui-4.15.5.jar: swagger-ui-es-bundle-core.js"/></testsuite><testsuite failures="0" id="42" name="/Users/user/.m2/repository/org/webjars/swagger-ui/4.15.5/swagger-ui-4.15.5.jar/META-INF/resources/webjars/swagger-ui/4.15.5/swagger-ui-es-bundle.js" package="swagger-ui-4.15.5.jar: swagger-ui-es-bundle.js" skipped="0" tests="1" timestamp="2024-08-01T01:25:04.946"><testcase classname="dependency-check" name="swagger-ui-4.15.5.jar: swagger-ui-es-bundle.js"/></testsuite><testsuite failures="0" id="43" name="/Users/user/.m2/repository/org/webjars/swagger-ui/4.15.5/swagger-ui-4.15.5.jar/META-INF/resources/webjars/swagger-ui/4.15.5/swagger-ui-standalone-preset.js" package="swagger-ui-4.15.5.jar: swagger-ui-standalone-preset.js" skipped="0" tests="1" timestamp="2024-08-01T01:25:04.946"><testcase classname="dependency-check" name="swagger-ui-4.15.5.jar: swagger-ui-standalone-preset.js"/></testsuite><testsuite failures="0" id="44" name="/Users/user/.m2/repository/org/webjars/swagger-ui/4.15.5/swagger-ui-4.15.5.jar/META-INF/resources/webjars/swagger-ui/4.15.5/swagger-ui.js" package="swagger-ui-4.15.5.jar: swagger-ui.js" skipped="0" tests="1" timestamp="2024-08-01T01:25:04.946"><testcase classname="dependency-check" name="swagger-ui-4.15.5.jar: swagger-ui.js"/></testsuite><testsuite failures="20" id="45" name="/Users/user/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/9.0.38/tomcat-embed-core-9.0.38.jar" package="tomcat-embed-core-9.0.38.jar" skipped="0" tests="20" timestamp="2024-08-01T01:25:04.946"><testcase classname="CVE-2020-17527" name="pkg:maven/org.apache.tomcat.embed/tomcat-embed-core@9.0.38"><failure message="cvssV3: HIGH, score: 7.5 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N)"/><system-out>While investigating bug 64830 it was discovered that Apache Tomcat 10.0.0-M1 to 10.0.0-M9, 9.0.0-M1 to 9.0.39 and 8.5.0 to 8.5.59 could re-use an HTTP request header value from the previous stream received on an HTTP/2 connection for the request associated with the subsequent stream. While this would most likely lead to an error and the closure of the HTTP/2 connection, it is possible that information could leak between requests.</system-out><system-err>location: /Users/user/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/9.0.38/tomcat-embed-core-9.0.38.jar</system-err></testcase><testcase classname="CVE-2020-9484" name="pkg:maven/org.apache.tomcat.embed/tomcat-embed-core@9.0.38"><failure message="cvssV3: HIGH, score: 7.0 (CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:H/I:H/A:H)"/><system-out>When using Apache Tomcat versions 10.0.0-M1 to 10.0.0-M4, 9.0.0.M1 to 9.0.34, 8.5.0 to 8.5.54 and 7.0.0 to 7.0.103 if a) an attacker is able to control the contents and name of a file on the server; and b) the server is configured to use the PersistenceManager with a FileStore; and c) the PersistenceManager is configured with sessionAttributeValueClassNameFilter=&quot;null&quot; (the default unless a SecurityManager is used) or a sufficiently lax filter to allow the attacker provided object to be deserialized; and d) the attacker knows the relative file path from the storage location used by FileStore to the file the attacker has control over; then, using a specifically crafted request, the attacker will be able to trigger remote code execution via deserialization of the file under their control. Note that all of conditions a) to d) must be true for the attack to succeed.</system-out><system-err>location: /Users/user/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/9.0.38/tomcat-embed-core-9.0.38.jar</system-err></testcase><testcase classname="CVE-2021-24122" name="pkg:maven/org.apache.tomcat.embed/tomcat-embed-core@9.0.38"><failure message="cvssV3: MEDIUM, score: 5.9 (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N)"/><system-out>When serving resources from a network location using the NTFS file system, Apache Tomcat versions 10.0.0-M1 to 10.0.0-M9, 9.0.0.M1 to 9.0.39, 8.5.0 to 8.5.59 and 7.0.0 to 7.0.106 were susceptible to JSP source code disclosure in some configurations. The root cause was the unexpected behaviour of the JRE API File.getCanonicalPath() which in turn was caused by the inconsistent behaviour of the Windows API (FindFirstFileW) in some circumstances.</system-out><system-err>location: /Users/user/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/9.0.38/tomcat-embed-core-9.0.38.jar</system-err></testcase><testcase classname="CVE-2021-25122" name="pkg:maven/org.apache.tomcat.embed/tomcat-embed-core@9.0.38"><failure message="cvssV3: HIGH, score: 7.5 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N)"/><system-out>When responding to new h2c connection requests, Apache Tomcat versions 10.0.0-M1 to 10.0.0, 9.0.0.M1 to 9.0.41 and 8.5.0 to 8.5.61 could duplicate request headers and a limited amount of request body from one request to another meaning user A and user B could both see the results of user A&apos;s request.</system-out><system-err>location: /Users/user/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/9.0.38/tomcat-embed-core-9.0.38.jar</system-err></testcase><testcase classname="CVE-2021-25329" name="pkg:maven/org.apache.tomcat.embed/tomcat-embed-core@9.0.38"><failure message="cvssV3: HIGH, score: 7.0 (CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:H/I:H/A:H)"/><system-out>The fix for CVE-2020-9484 was incomplete. When using Apache Tomcat 10.0.0-M1 to 10.0.0, 9.0.0.M1 to 9.0.41, 8.5.0 to 8.5.61 or 7.0.0. to 7.0.107 with a configuration edge case that was highly unlikely to be used, the Tomcat instance was still vulnerable to CVE-2020-9494. Note that both the previously published prerequisites for CVE-2020-9484 and the previously published mitigations for CVE-2020-9484 also apply to this issue.</system-out><system-err>location: /Users/user/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/9.0.38/tomcat-embed-core-9.0.38.jar</system-err></testcase><testcase classname="CVE-2021-30640" name="pkg:maven/org.apache.tomcat.embed/tomcat-embed-core@9.0.38"><failure message="cvssV3: MEDIUM, score: 6.5 (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:H/A:N)"/><system-out>A vulnerability in the JNDI Realm of Apache Tomcat allows an attacker to authenticate using variations of a valid user name and/or to bypass some of the protection provided by the LockOut Realm. This issue affects Apache Tomcat 10.0.0-M1 to 10.0.5; 9.0.0.M1 to 9.0.45; 8.5.0 to 8.5.65.</system-out><system-err>location: /Users/user/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/9.0.38/tomcat-embed-core-9.0.38.jar</system-err></testcase><testcase classname="CVE-2021-33037" name="pkg:maven/org.apache.tomcat.embed/tomcat-embed-core@9.0.38"><failure message="cvssV3: MEDIUM, score: 5.3 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N)"/><system-out>Apache Tomcat 10.0.0-M1 to 10.0.6, 9.0.0.M1 to 9.0.46 and 8.5.0 to 8.5.66 did not correctly parse the HTTP transfer-encoding request header in some circumstances leading to the possibility to request smuggling when used with a reverse proxy. Specifically: - Tomcat incorrectly ignored the transfer encoding header if the client declared it would only accept an HTTP/1.0 response; - Tomcat honoured the identify encoding; and - Tomcat did not ensure that, if present, the chunked encoding was the final encoding.</system-out><system-err>location: /Users/user/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/9.0.38/tomcat-embed-core-9.0.38.jar</system-err></testcase><testcase classname="CVE-2021-41079" name="pkg:maven/org.apache.tomcat.embed/tomcat-embed-core@9.0.38"><failure message="cvssV3: HIGH, score: 7.5 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H)"/><system-out>Apache Tomcat 8.5.0 to 8.5.63, 9.0.0-M1 to 9.0.43 and 10.0.0-M1 to 10.0.2 did not properly validate incoming TLS packets. When Tomcat was configured to use NIO+OpenSSL or NIO2+OpenSSL for TLS, a specially crafted packet could be used to trigger an infinite loop resulting in a denial of service.</system-out><system-err>location: /Users/user/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/9.0.38/tomcat-embed-core-9.0.38.jar</system-err></testcase><testcase classname="CVE-2021-43980" name="pkg:maven/org.apache.tomcat.embed/tomcat-embed-core@9.0.38"><failure message="cvssV3: LOW, score: 3.7 (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N)"/><system-out>The simplified implementation of blocking reads and writes introduced in Tomcat 10 and back-ported to Tomcat 9.0.47 onwards exposed a long standing (but extremely hard to trigger) concurrency bug in Apache Tomcat 10.1.0 to 10.1.0-M12, 10.0.0-M1 to 10.0.18, 9.0.0-M1 to 9.0.60 and 8.5.0 to 8.5.77 that could cause client connections to share an Http11Processor instance resulting in responses, or part responses, to be received by the wrong client.</system-out><system-err>location: /Users/user/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/9.0.38/tomcat-embed-core-9.0.38.jar</system-err></testcase><testcase classname="CVE-2022-23181" name="pkg:maven/org.apache.tomcat.embed/tomcat-embed-core@9.0.38"><failure message="cvssV3: HIGH, score: 7.0 (CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:H/I:H/A:H)"/><system-out>The fix for bug CVE-2020-9484 introduced a time of check, time of use vulnerability into Apache Tomcat 10.1.0-M1 to 10.1.0-M8, 10.0.0-M5 to 10.0.14, 9.0.35 to 9.0.56 and 8.5.55 to 8.5.73 that allowed a local attacker to perform actions with the privileges of the user that the Tomcat process is using. This issue is only exploitable when Tomcat is configured to persist sessions using the FileStore.</system-out><system-err>location: /Users/user/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/9.0.38/tomcat-embed-core-9.0.38.jar</system-err></testcase><testcase classname="CVE-2022-29885" name="pkg:maven/org.apache.tomcat.embed/tomcat-embed-core@9.0.38"><failure message="cvssV3: HIGH, score: 7.5 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H)"/><system-out>The documentation of Apache Tomcat 10.1.0-M1 to 10.1.0-M14, 10.0.0-M1 to 10.0.20, 9.0.13 to 9.0.62 and 8.5.38 to 8.5.78 for the EncryptInterceptor incorrectly stated it enabled Tomcat clustering to run over an untrusted network. This was not correct. While the EncryptInterceptor does provide confidentiality and integrity protection, it does not protect against all risks associated with running over any untrusted network, particularly DoS risks.</system-out><system-err>location: /Users/user/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/9.0.38/tomcat-embed-core-9.0.38.jar</system-err></testcase><testcase classname="CVE-2022-34305" name="pkg:maven/org.apache.tomcat.embed/tomcat-embed-core@9.0.38"><failure message="cvssV3: MEDIUM, score: 6.1 (CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N)"/><system-out>In Apache Tomcat 10.1.0-M1 to 10.1.0-M16, 10.0.0-M1 to 10.0.22, 9.0.30 to 9.0.64 and 8.5.50 to 8.5.81 the Form authentication example in the examples web application displayed user provided data without filtering, exposing a XSS vulnerability.</system-out><system-err>location: /Users/user/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/9.0.38/tomcat-embed-core-9.0.38.jar</system-err></testcase><testcase classname="CVE-2022-42252" name="pkg:maven/org.apache.tomcat.embed/tomcat-embed-core@9.0.38"><failure message="cvssV3: HIGH, score: 7.5 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N)"/><system-out>If Apache Tomcat 8.5.0 to 8.5.82, 9.0.0-M1 to 9.0.67, 10.0.0-M1 to 10.0.26 or 10.1.0-M1 to 10.1.0 was configured to ignore invalid HTTP headers via setting rejectIllegalHeader to false (the default for 8.5.x only), Tomcat did not reject a request containing an invalid Content-Length header making a request smuggling attack possible if Tomcat was located behind a reverse proxy that also failed to reject the request with the invalid header.</system-out><system-err>location: /Users/user/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/9.0.38/tomcat-embed-core-9.0.38.jar</system-err></testcase><testcase classname="CVE-2023-28708" name="pkg:maven/org.apache.tomcat.embed/tomcat-embed-core@9.0.38"><failure message="cvssV3: MEDIUM, score: 4.3 (CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:L/I:N/A:N)"/><system-out>
When using the RemoteIpFilter with requests received from a    reverse proxy via HTTP that include the X-Forwarded-Proto    header set to https, session cookies created by Apache Tomcat 11.0.0-M1 to 11.0.0.-M2, 10.1.0-M1 to 10.1.5, 9.0.0-M1 to 9.0.71 and 8.5.0 to 8.5.85 did notÂ include the secure attribute. This could result in the user agentÂ transmitting the session cookie over an insecure channel.







</system-out><system-err>location: /Users/user/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/9.0.38/tomcat-embed-core-9.0.38.jar</system-err></testcase><testcase classname="CVE-2023-41080" name="pkg:maven/org.apache.tomcat.embed/tomcat-embed-core@9.0.38"><failure message="cvssV3: MEDIUM, score: 6.1 (CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N)"/><system-out>URL Redirection to Untrusted Site (&apos;Open Redirect&apos;) vulnerability in FORM authentication feature Apache Tomcat.This issue affects Apache Tomcat: from 11.0.0-M1 through 11.0.0-M10, from 10.1.0-M1 through 10.0.12, from 9.0.0-M1 through 9.0.79 and from 8.5.0 through 8.5.92.

The vulnerability is limited to the ROOT (default) web application.</system-out><system-err>location: /Users/user/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/9.0.38/tomcat-embed-core-9.0.38.jar</system-err></testcase><testcase classname="CVE-2023-42795" name="pkg:maven/org.apache.tomcat.embed/tomcat-embed-core@9.0.38"><failure message="cvssV3: MEDIUM, score: 5.3 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N)"/><system-out>Incomplete Cleanup vulnerability in Apache Tomcat.When recycling various internal objects in Apache Tomcat from 11.0.0-M1 through 11.0.0-M11, from 10.1.0-M1 through 10.1.13, from 9.0.0-M1 through 9.0.80 and from 8.5.0 through 8.5.93, an error could 
cause Tomcat to skip some parts of the recycling process leading to 
information leaking from the current request/response to the next.

Users are recommended to upgrade to version 11.0.0-M12 onwards, 10.1.14 onwards, 9.0.81 onwards or 8.5.94 onwards, which fixes the issue.

</system-out><system-err>location: /Users/user/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/9.0.38/tomcat-embed-core-9.0.38.jar</system-err></testcase><testcase classname="CVE-2023-44487" name="pkg:maven/org.apache.tomcat.embed/tomcat-embed-core@9.0.38"><failure message="cvssV3: HIGH, score: 7.5 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H)"/><system-out>The HTTP/2 protocol allows a denial of service (server resource consumption) because request cancellation can reset many streams quickly, as exploited in the wild in August through October 2023.</system-out><system-err>location: /Users/user/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/9.0.38/tomcat-embed-core-9.0.38.jar</system-err></testcase><testcase classname="CVE-2023-45648" name="pkg:maven/org.apache.tomcat.embed/tomcat-embed-core@9.0.38"><failure message="cvssV3: MEDIUM, score: 5.3 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N)"/><system-out>Improper Input Validation vulnerability in Apache Tomcat.TomcatÂ from 11.0.0-M1 through 11.0.0-M11, from 10.1.0-M1 through 10.1.13, from 9.0.0-M1 through 9.0.81 and from 8.5.0 through 8.5.93 did not correctly parse HTTP trailer headers. A specially 
crafted, invalid trailer header could cause Tomcat to treat a single 
request as multiple requests leading to the possibility of request 
smuggling when behind a reverse proxy.

Users are recommended to upgrade to version 11.0.0-M12 onwards, 10.1.14 onwards, 9.0.81 onwards or 8.5.94 onwards, which fix the issue.

</system-out><system-err>location: /Users/user/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/9.0.38/tomcat-embed-core-9.0.38.jar</system-err></testcase><testcase classname="CVE-2023-46589" name="pkg:maven/org.apache.tomcat.embed/tomcat-embed-core@9.0.38"><failure message="cvssV3: HIGH, score: 7.5 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N)"/><system-out>Improper Input Validation vulnerability in Apache Tomcat.Tomcat from 11.0.0-M1 through 11.0.0-M10, from 10.1.0-M1 through 10.1.15, from 9.0.0-M1 through 9.0.82 and from 8.5.0 through 8.5.95 did not correctly parse HTTP trailer headers. A trailer header that exceeded the header size limit could cause Tomcat to treat a single 
request as multiple requests leading to the possibility of request 
smuggling when behind a reverse proxy.

Users are recommended to upgrade to version 11.0.0-M11Â onwards, 10.1.16 onwards, 9.0.83 onwards or 8.5.96 onwards, which fix the issue.

</system-out><system-err>location: /Users/user/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/9.0.38/tomcat-embed-core-9.0.38.jar</system-err></testcase><testcase classname="CVE-2024-21733" name="pkg:maven/org.apache.tomcat.embed/tomcat-embed-core@9.0.38"><failure message="cvssV3: MEDIUM, score: 5.3 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N)"/><system-out>Generation of Error Message Containing Sensitive Information vulnerability in Apache Tomcat.This issue affects Apache Tomcat: from 8.5.7 through 8.5.63, from 9.0.0-M11 through 9.0.43.

Users are recommended to upgrade to version 8.5.64 onwards or 9.0.44 onwards, which contain a fix for the issue.

</system-out><system-err>location: /Users/user/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/9.0.38/tomcat-embed-core-9.0.38.jar</system-err></testcase></testsuite><testsuite failures="0" id="46" name="/Users/user/.m2/repository/org/webjars/webjars-locator-core/0.45/webjars-locator-core-0.45.jar" package="webjars-locator-core-0.45.jar" skipped="0" tests="1" timestamp="2024-08-01T01:25:04.946"><testcase classname="dependency-check" name="webjars-locator-core-0.45.jar"/></testsuite></testsuites>